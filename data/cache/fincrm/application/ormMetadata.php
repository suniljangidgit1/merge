<?php
return array (
  'ActionHistoryRecord' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'number' => 
      array (
        'type' => 'int',
        'autoincrement' => true,
        'unique' => true,
        'index' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'action' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'userType' => 
      array (
        'type' => 'foreign',
        'notStorable' => true,
        'relation' => 'user',
        'foreign' => 'type',
        'fieldType' => 'foreign',
      ),
      'ipAddress' => 
      array (
        'type' => 'varchar',
        'len' => '39',
        'fieldType' => 'varchar',
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'authTokenId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'authTokenName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'authToken',
        'foreign' => 'id',
      ),
      'authLogRecordId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'authLogRecordName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'authLogRecord',
        'foreign' => 'id',
      ),
    ),
    'relations' => 
    array (
      'authLogRecord' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'AuthLogRecord',
        'key' => 'authLogRecordId',
        'foreignKey' => 'id',
        'foreign' => 'actionHistoryRecords',
      ),
      'authToken' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'AuthToken',
        'key' => 'authTokenId',
        'foreignKey' => 'id',
        'foreign' => 'actionHistoryRecords',
      ),
      'target' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'targetId',
      ),
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'ArrayValue' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'value' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'attribute' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'entityId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'entity',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'entityType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'entity',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'entityName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'entity',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
    ),
    'indexes' => 
    array (
      'entityTypeValue' => 
      array (
        'columns' => 
        array (
          0 => 'entityType',
          1 => 'value',
        ),
        'key' => 'IDX_ENTITY_TYPE_VALUE',
      ),
      'entityValue' => 
      array (
        'columns' => 
        array (
          0 => 'entityType',
          1 => 'entityId',
          2 => 'value',
        ),
        'key' => 'IDX_ENTITY_VALUE',
      ),
    ),
  ),
  'Attachment' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'size' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'sourceId' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'field' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'contents' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'fieldType' => 'text',
      ),
      'role' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'fieldType' => 'varchar',
      ),
      'storage' => 
      array (
        'type' => 'varchar',
        'len' => 24,
        'fieldType' => 'varchar',
      ),
      'storageFilePath' => 
      array (
        'type' => 'varchar',
        'len' => 260,
        'fieldType' => 'varchar',
      ),
      'global' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'relatedId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'related',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'relatedType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'related',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'relatedName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'related',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'related' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'relatedId',
      ),
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'parent' => 
      array (
        'columns' => 
        array (
          0 => 'parentType',
          1 => 'parentId',
        ),
        'key' => 'IDX_PARENT',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'AuthLogRecord' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'username' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'ipAddress' => 
      array (
        'type' => 'varchar',
        'len' => '45',
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'isDenied' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'denialReason' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'requestTime' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'requestUrl' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'requestMethod' => 
      array (
        'type' => 'varchar',
        'len' => '15',
        'fieldType' => 'varchar',
      ),
      'authTokenIsActive' => 
      array (
        'type' => 'foreign',
        'relation' => 'authToken',
        'foreign' => 'isActive',
        'fieldType' => 'foreign',
      ),
      'authenticationMethod' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'portalId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'portalName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'portal',
        'foreign' => 'name',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'authTokenId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'authTokenName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'authToken',
        'foreign' => 'id',
      ),
      'actionHistoryRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'actionHistoryRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'actionHistoryRecords' => 
      array (
        'type' => 'hasMany',
        'entity' => 'ActionHistoryRecord',
        'foreignKey' => 'authLogRecordId',
        'foreign' => 'authLogRecord',
      ),
      'authToken' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'AuthToken',
        'key' => 'authTokenId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'portal' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Portal',
        'key' => 'portalId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'noJoin' => true,
      ),
    ),
    'indexes' => 
    array (
      'ipAddress' => 
      array (
        'columns' => 
        array (
          0 => 'ipAddress',
        ),
        'key' => 'IDX_IP_ADDRESS',
      ),
      'ipAddressRequestTime' => 
      array (
        'columns' => 
        array (
          0 => 'ipAddress',
          1 => 'requestTime',
        ),
        'key' => 'IDX_IP_ADDRESS_REQUEST_TIME',
      ),
      'requestTime' => 
      array (
        'columns' => 
        array (
          0 => 'requestTime',
        ),
        'key' => 'IDX_REQUEST_TIME',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'requestTime',
      'order' => 'DESC',
    ),
  ),
  'AuthToken' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'token' => 
      array (
        'type' => 'varchar',
        'len' => '36',
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'hash' => 
      array (
        'type' => 'varchar',
        'len' => 150,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'secret' => 
      array (
        'type' => 'varchar',
        'len' => '36',
        'fieldType' => 'varchar',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => '36',
        'type' => 'foreignId',
        'fieldType' => 'link',
        'index' => true,
        'attributeRole' => 'id',
        'notNull' => false,
      ),
      'ipAddress' => 
      array (
        'type' => 'varchar',
        'len' => '45',
        'fieldType' => 'varchar',
      ),
      'isActive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'lastAccess' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'portalId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'portalName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'portal',
        'foreign' => 'name',
      ),
      'actionHistoryRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'actionHistoryRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'actionHistoryRecords' => 
      array (
        'type' => 'hasMany',
        'entity' => 'ActionHistoryRecord',
        'foreignKey' => 'authTokenId',
        'foreign' => 'authToken',
      ),
      'portal' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Portal',
        'key' => 'portalId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'token' => 
      array (
        'columns' => 
        array (
          0 => 'token',
          1 => 'deleted',
        ),
        'key' => 'IDX_TOKEN',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'lastAccess',
      'order' => 'DESC',
    ),
  ),
  'Currency' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'rate' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
    ),
    'relations' => 
    array (
    ),
  ),
  'DashboardTemplate' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'layout' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'dashletsOptions' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'Email' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'subject' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fromName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fromAddress' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fromString' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyToString' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyToName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyToAddress' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addressNameMap' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'from' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'to' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'cc' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'bcc' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyTo' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'personStringData' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'isRead' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'isNotRead' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'isReplied' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'isNotReplied' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'isImportant' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'inTrash' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'folderId' => 
      array (
        'dbType' => 'varchar',
        'len' => 255,
        'type' => 'foreignId',
        'notStorable' => true,
        'default' => '',
        'fieldType' => 'link',
        'index' => 'folder',
        'attributeRole' => 'id',
        'notNull' => false,
      ),
      'isUsers' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'nameHash' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'fieldType' => 'text',
      ),
      'typeHash' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'fieldType' => 'text',
      ),
      'idHash' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'fieldType' => 'text',
      ),
      'messageId' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'messageIdInternal' => 
      array (
        'type' => 'varchar',
        'len' => 300,
        'fieldType' => 'varchar',
      ),
      'emailAddress' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'base',
      ),
      'bodyPlain' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'body' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'isHtml' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Archived',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'hasAttachment' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'dateSent' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'deliveryDate' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'isSystem' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'isJustSent' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'isBeingImported' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'folderName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'fromEmailAddressId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'fromEmailAddressName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'fromEmailAddress',
        'foreign' => 'name',
      ),
      'toEmailAddressesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'toEmailAddresses',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'toEmailAddressesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'ccEmailAddressesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'ccEmailAddresses',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'ccEmailAddressesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'replyToEmailAddressesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'replyToEmailAddresses',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'replyToEmailAddressesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'sentById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'sentByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'sentBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'repliedId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'repliedName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'replied',
        'foreign' => 'name',
      ),
      'repliesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'replies',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'dateSent',
        'isLinkStub' => false,
      ),
      'repliesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'users',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'usersColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'inTrash' => 'inTrash',
          'folderId' => 'folderId',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'assignedUsersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'assignedUsers',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'assignedUsersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'inboundEmailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'inboundEmails',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'inboundEmailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'emailAccountsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'emailAccounts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'emailAccountsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'bccEmailAddressesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'bccEmailAddressesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'emailAccounts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAccount',
        'relationName' => 'emailEmailAccount',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'emailAccountId',
        ),
        'foreign' => 'emails',
      ),
      'inboundEmails' => 
      array (
        'type' => 'manyMany',
        'entity' => 'InboundEmail',
        'relationName' => 'emailInboundEmail',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'inboundEmailId',
        ),
        'foreign' => 'emails',
      ),
      'replyToEmailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'emailAddressId',
        ),
        'relationName' => 'emailEmailAddress',
        'conditions' => 
        array (
          'addressType' => 'rto',
        ),
        'additionalColumns' => 
        array (
          'addressType' => 
          array (
            'type' => 'varchar',
            'len' => '4',
          ),
        ),
      ),
      'bccEmailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'emailAddressId',
        ),
        'relationName' => 'emailEmailAddress',
        'conditions' => 
        array (
          'addressType' => 'bcc',
        ),
        'additionalColumns' => 
        array (
          'addressType' => 
          array (
            'type' => 'varchar',
            'len' => '4',
          ),
        ),
      ),
      'ccEmailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'emailAddressId',
        ),
        'relationName' => 'emailEmailAddress',
        'conditions' => 
        array (
          'addressType' => 'cc',
        ),
        'additionalColumns' => 
        array (
          'addressType' => 
          array (
            'type' => 'varchar',
            'len' => '4',
          ),
        ),
      ),
      'toEmailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'emailAddressId',
        ),
        'relationName' => 'emailEmailAddress',
        'conditions' => 
        array (
          'addressType' => 'to',
        ),
        'additionalColumns' => 
        array (
          'addressType' => 
          array (
            'type' => 'varchar',
            'len' => '4',
          ),
        ),
      ),
      'fromEmailAddress' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailAddress',
        'key' => 'fromEmailAddressId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'replies' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Email',
        'foreignKey' => 'repliedId',
        'foreign' => 'replied',
      ),
      'replied' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Email',
        'key' => 'repliedId',
        'foreignKey' => 'id',
        'foreign' => 'replies',
      ),
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'sentBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'sentById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'emailUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'emailId',
          1 => 'userId',
        ),
        'foreign' => 'emails',
        'additionalColumns' => 
        array (
          'isRead' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
          'isImportant' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
          'inTrash' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
          'folderId' => 
          array (
            'type' => 'varchar',
            'default' => NULL,
            'maxLength' => 24,
          ),
        ),
      ),
      'assignedUsers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'entityUser',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'userId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Email',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Email',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
        'relationName' => 'attachments',
      ),
    ),
    'indexes' => 
    array (
      'createdById' => 
      array (
        'columns' => 
        array (
          0 => 'createdById',
        ),
        'key' => 'IDX_CREATED_BY_ID',
      ),
      'dateSent' => 
      array (
        'columns' => 
        array (
          0 => 'dateSent',
          1 => 'deleted',
        ),
        'key' => 'IDX_DATE_SENT',
      ),
      'dateSentStatus' => 
      array (
        'columns' => 
        array (
          0 => 'dateSent',
          1 => 'status',
          2 => 'deleted',
        ),
        'key' => 'IDX_DATE_SENT_STATUS',
      ),
      'system_fullTextSearch' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'bodyPlain',
          2 => 'body',
        ),
        'flags' => 
        array (
          0 => 'fulltext',
        ),
        'key' => 'IDX_SYSTEM_FULL_TEXT_SEARCH',
      ),
    ),
    'fullTextSearchColumnList' => 
    array (
      0 => 'name',
      1 => 'bodyPlain',
      2 => 'body',
    ),
    'collection' => 
    array (
      'orderBy' => 'dateSent',
      'order' => 'DESC',
    ),
  ),
  'EmailAccount' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'emailAddress' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Active',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'host' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'port' => 
      array (
        'type' => 'varchar',
        'default' => '143',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ssl' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'username' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'password' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'monitoredFolders' => 
      array (
        'type' => 'varchar',
        'default' => 'INBOX',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sentFolder' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'storeSentEmails' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'keepFetchedEmailsUnread' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'fetchSince' => 
      array (
        'type' => 'date',
        'fieldType' => 'date',
      ),
      'fetchData' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'useImap' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'useSmtp' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'smtpHost' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPort' => 
      array (
        'type' => 'int',
        'default' => '587',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'smtpAuth' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'smtpSecurity' => 
      array (
        'type' => 'varchar',
        'default' => 'TLS',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpUsername' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPassword' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'smtpAuthMechanism' => 
      array (
        'type' => 'varchar',
        'default' => 'login',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailFolderId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'emailFolderName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'emailFolder',
        'foreign' => 'name',
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'filtersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'filtersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailFolder' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailFolder',
        'key' => 'emailFolderId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'emails' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Email',
        'relationName' => 'emailEmailAccount',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'emailAccountId',
          1 => 'emailId',
        ),
        'foreign' => 'emailAccounts',
      ),
      'filters' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'EmailFilter',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'EmailAddress' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'lower' => 
      array (
        'type' => 'varchar',
        'index' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'invalid' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'optOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
    ),
    'relations' => 
    array (
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'EmailFilter' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'from' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'to' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'subject' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'bodyContains' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'isGlobal' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'action' => 
      array (
        'type' => 'varchar',
        'default' => 'Skip',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'emailFolderId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'emailFolderName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'emailFolder',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'emailFolder' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailFolder',
        'key' => 'emailFolderId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'EmailFolder' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 64,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'order' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'skipNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'order',
      'order' => 'ASC',
    ),
  ),
  'EmailTemplate' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'subject' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'body' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'isHtml' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'oneOff' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'categoryId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'categoryName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'category',
        'foreign' => 'name',
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'EmailTemplate',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'category' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailTemplateCategory',
        'key' => 'categoryId',
        'foreignKey' => 'id',
        'foreign' => 'emailTemplates',
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'EmailTemplateCategory' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'order' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'childList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'parentName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'parent',
        'foreign' => 'name',
      ),
      'emailTemplatesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailTemplatesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'childrenIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'childrenNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailTemplates' => 
      array (
        'type' => 'hasMany',
        'entity' => 'EmailTemplate',
        'foreignKey' => 'categoryId',
        'foreign' => 'category',
      ),
      'children' => 
      array (
        'type' => 'hasMany',
        'entity' => 'EmailTemplateCategory',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'parent' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailTemplateCategory',
        'key' => 'parentId',
        'foreignKey' => 'id',
        'foreign' => 'children',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'EmailTemplateCategory',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'additionalTables' => 
    array (
      'EmailTemplateCategoryPath' => 
      array (
        'fields' => 
        array (
          'id' => 
          array (
            'type' => 'id',
            'dbType' => 'int',
            'len' => '11',
            'autoincrement' => true,
          ),
          'ascendorId' => 
          array (
            'type' => 'varchar',
            'len' => '100',
            'index' => true,
          ),
          'descendorId' => 
          array (
            'type' => 'varchar',
            'len' => '24',
            'index' => true,
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'order' => 'ASC',
    ),
  ),
  'Extension' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'version' => 
      array (
        'type' => 'varchar',
        'len' => 50,
        'fieldType' => 'varchar',
      ),
      'fileList' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'isInstalled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'checkVersionUrl' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'ExternalAccount' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 64,
        'type' => 'id',
        'fieldType' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'enabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
    ),
    'relations' => 
    array (
    ),
  ),
  'Import' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'entityType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'importedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'duplicateCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'updatedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'fileId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => false,
        'notNull' => false,
      ),
      'fileName' => 
      array (
        'type' => 'foreign',
        'relation' => 'file',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'file' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Attachment',
        'key' => 'fileId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'InboundEmail' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'emailAddress' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Active',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'host' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'port' => 
      array (
        'type' => 'varchar',
        'default' => '143',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ssl' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'username' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'password' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'monitoredFolders' => 
      array (
        'type' => 'varchar',
        'default' => 'INBOX',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fetchSince' => 
      array (
        'type' => 'date',
        'fieldType' => 'date',
      ),
      'fetchData' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'addAllTeamUsers' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'sentFolder' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'storeSentEmails' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'keepFetchedEmailsUnread' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'useImap' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'useSmtp' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'smtpIsShared' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'smtpIsForMassEmail' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'smtpHost' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPort' => 
      array (
        'type' => 'int',
        'default' => '587',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'smtpAuth' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'smtpSecurity' => 
      array (
        'type' => 'varchar',
        'default' => 'TLS',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpUsername' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPassword' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'smtpAuthMechanism' => 
      array (
        'type' => 'varchar',
        'default' => 'login',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createCase' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'caseDistribution' => 
      array (
        'type' => 'varchar',
        'default' => 'Direct-Assignment',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'targetUserPosition' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'reply' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'replyFromAddress' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyToAddress' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyFromName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fromName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'assignToUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignToUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignToUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'teamName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'team',
        'foreign' => 'name',
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'replyEmailTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'replyEmailTemplateName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'replyEmailTemplate',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'filtersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'filtersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emails' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Email',
        'relationName' => 'emailInboundEmail',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'inboundEmailId',
          1 => 'emailId',
        ),
        'foreign' => 'inboundEmails',
      ),
      'filters' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'EmailFilter',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'replyEmailTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailTemplate',
        'key' => 'replyEmailTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'team' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Team',
        'key' => 'teamId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'assignToUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignToUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'inboundEmailTeam',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'inboundEmailId',
          1 => 'teamId',
        ),
        'foreign' => 'inboundEmails',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'Integration' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'enabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
    ),
    'relations' => 
    array (
    ),
  ),
  'Job' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Pending',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'executeTime' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'number' => 
      array (
        'type' => 'int',
        'dbType' => 'bigint',
        'autoincrement' => true,
        'unique' => true,
        'index' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'serviceName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'methodName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'job' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'scheduledJobJob' => 
      array (
        'type' => 'foreign',
        'relation' => 'scheduledJob',
        'foreign' => 'job',
        'fieldType' => 'foreign',
      ),
      'queue' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'fieldType' => 'varchar',
      ),
      'startedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'executedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'pid' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'attempts' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'targetId' => 
      array (
        'type' => 'varchar',
        'len' => 48,
        'fieldType' => 'varchar',
      ),
      'targetType' => 
      array (
        'type' => 'varchar',
        'len' => 64,
        'fieldType' => 'varchar',
      ),
      'failedAttempts' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'scheduledJobId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'scheduledJobName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'scheduledJob',
        'foreign' => 'name',
      ),
    ),
    'relations' => 
    array (
      'scheduledJob' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'ScheduledJob',
        'key' => 'scheduledJobId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'executeTime' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'executeTime',
        ),
        'key' => 'IDX_EXECUTE_TIME',
      ),
      'status' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'deleted',
        ),
        'key' => 'IDX_STATUS',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'LeadCapture' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'isActive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'subscribeToTargetList' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'subscribeContactToTargetList' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'fieldList' => 
      array (
        'type' => 'jsonArray',
        'default' => '["firstName","lastName","emailAddress"]',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'duplicateCheck' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'optInConfirmation' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'optInConfirmationLifetime' => 
      array (
        'type' => 'int',
        'default' => '48',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'optInConfirmationSuccessMessage' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createLeadBeforeOptInConfirmation' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'skipOptInConfirmationIfSubscribed' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'leadSource' => 
      array (
        'type' => 'varchar',
        'default' => 'Web Site',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'apiKey' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'fieldType' => 'varchar',
      ),
      'exampleRequestUrl' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'exampleRequestMethod' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'exampleRequestPayload' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'fieldType' => 'text',
      ),
      'smtpAccount' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'base',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'targetListId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'targetListName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'targetList',
        'foreign' => 'name',
      ),
      'optInConfirmationEmailTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'optInConfirmationEmailTemplateName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'optInConfirmationEmailTemplate',
        'foreign' => 'name',
      ),
      'targetTeamId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'targetTeamName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'targetTeam',
        'foreign' => 'name',
      ),
      'inboundEmailId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'inboundEmailName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'inboundEmail',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'logRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'logRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'logRecords' => 
      array (
        'type' => 'hasMany',
        'entity' => 'LeadCaptureLogRecord',
        'foreignKey' => 'leadCaptureId',
        'foreign' => 'leadCapture',
      ),
      'optInConfirmationEmailTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailTemplate',
        'key' => 'optInConfirmationEmailTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'inboundEmail' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'InboundEmail',
        'key' => 'inboundEmailId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'targetTeam' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Team',
        'key' => 'targetTeamId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'targetList' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'TargetList',
        'key' => 'targetListId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'LeadCaptureLogRecord' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'number' => 
      array (
        'type' => 'int',
        'autoincrement' => true,
        'unique' => true,
        'index' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'isCreated' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'leadCaptureId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'leadCaptureName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'leadCapture',
        'foreign' => 'name',
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
      'target' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'targetId',
      ),
      'leadCapture' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'LeadCapture',
        'key' => 'leadCaptureId',
        'foreignKey' => 'id',
        'foreign' => 'logRecords',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'NextNumber' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'entityType' => 
      array (
        'type' => 'varchar',
        'index' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fieldName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'value' => 
      array (
        'type' => 'int',
        'default' => '1',
        'fieldType' => 'int',
        'len' => 11,
      ),
    ),
    'relations' => 
    array (
    ),
  ),
  'Note' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'post' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'targetType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'number' => 
      array (
        'type' => 'int',
        'dbType' => 'bigint',
        'autoincrement' => true,
        'unique' => true,
        'index' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'isGlobal' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'createdByGender' => 
      array (
        'type' => 'foreign',
        'relation' => 'createdBy',
        'foreign' => 'gender',
        'fieldType' => 'foreign',
      ),
      'notifiedUserIdList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'isInternal' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'relatedId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'related',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'relatedType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'related',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'relatedName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'related',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'portals',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'users',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'superParentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'superParent',
        'notNull' => false,
      ),
      'superParentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'superParent',
        'len' => 100,
        'dbType' => 'varchar',
      ),
      'superParentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'noteUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'noteId',
          1 => 'userId',
        ),
        'foreign' => 'notes',
      ),
      'portals' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Portal',
        'relationName' => 'notePortal',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'noteId',
          1 => 'portalId',
        ),
        'foreign' => 'notes',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'noteTeam',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'noteId',
          1 => 'teamId',
        ),
        'foreign' => 'notes',
      ),
      'related' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'relatedId',
      ),
      'superParent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'superParentId',
      ),
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
        'relationName' => 'attachments',
      ),
    ),
    'indexes' => 
    array (
      'createdAt' => 
      array (
        'type' => 'index',
        'columns' => 
        array (
          0 => 'createdAt',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
      'parent' => 
      array (
        'type' => 'index',
        'columns' => 
        array (
          0 => 'parentId',
          1 => 'parentType',
        ),
        'key' => 'IDX_PARENT',
      ),
      'parentAndSuperParent' => 
      array (
        'type' => 'index',
        'columns' => 
        array (
          0 => 'parentId',
          1 => 'parentType',
          2 => 'superParentId',
          3 => 'superParentType',
        ),
        'key' => 'IDX_PARENT_AND_SUPER_PARENT',
      ),
      'createdByNumber' => 
      array (
        'columns' => 
        array (
          0 => 'createdById',
          1 => 'number',
        ),
        'key' => 'IDX_CREATED_BY_NUMBER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'Notification' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'number' => 
      array (
        'type' => 'int',
        'dbType' => 'bigint',
        'autoincrement' => true,
        'unique' => true,
        'index' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'noteData' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'fieldType' => 'jsonObject',
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'read' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'emailIsProcessed' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'message' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'relatedId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'related',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'relatedType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'related',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'relatedName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'related',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'relatedParentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'relatedParent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'relatedParentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'relatedParent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'relatedParentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'relatedParent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
      'relatedParent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'relatedParentId',
      ),
      'related' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'relatedId',
      ),
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'createdAt' => 
      array (
        'type' => 'index',
        'columns' => 
        array (
          0 => 'createdAt',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
      'user' => 
      array (
        'type' => 'index',
        'columns' => 
        array (
          0 => 'userId',
          1 => 'createdAt',
        ),
        'key' => 'IDX_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'PasswordChangeRequest' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'requestId' => 
      array (
        'type' => 'varchar',
        'len' => 64,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'url' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
  ),
  'PhoneNumber' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'numeric' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'invalid' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'optOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
    ),
    'relations' => 
    array (
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'Portal' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'url' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'customId' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'index' => true,
        'fieldType' => 'varchar',
      ),
      'isActive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'isDefault' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'tabList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'quickCreateList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'theme' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'language' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'timeZone' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateFormat' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'timeFormat' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weekStart' => 
      array (
        'type' => 'int',
        'default' => '-1',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'defaultCurrency' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dashboardLayout' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'dashletsOptions' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'customUrl' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'logoId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => false,
        'notNull' => false,
      ),
      'logoName' => 
      array (
        'type' => 'foreign',
        'relation' => 'logo',
        'foreign' => 'name',
      ),
      'portalRolesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'portalRoles',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalRolesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'companyLogoId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => false,
        'notNull' => false,
      ),
      'companyLogoName' => 
      array (
        'type' => 'foreign',
        'relation' => 'companyLogo',
        'foreign' => 'name',
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'articlesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'articlesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'notesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'notesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'logo' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Attachment',
        'key' => 'logoId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'companyLogo' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Attachment',
        'key' => 'companyLogoId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'articles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'KnowledgeBaseArticle',
        'relationName' => 'knowledgeBaseArticlePortal',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'portalId',
          1 => 'knowledgeBaseArticleId',
        ),
        'foreign' => 'portals',
      ),
      'notes' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Note',
        'relationName' => 'notePortal',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'portalId',
          1 => 'noteId',
        ),
        'foreign' => 'portals',
      ),
      'portalRoles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PortalRole',
        'relationName' => 'portalPortalRole',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'portalId',
          1 => 'portalRoleId',
        ),
        'foreign' => 'portals',
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'portalUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'portalId',
          1 => 'userId',
        ),
        'foreign' => 'portals',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'PortalRole' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 150,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'fieldData' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'exportPermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'massUpdatePermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'portalsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'portalsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'portals' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Portal',
        'relationName' => 'portalPortalRole',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'portalRoleId',
          1 => 'portalId',
        ),
        'foreign' => 'portalRoles',
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'portalRoleUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'portalRoleId',
          1 => 'userId',
        ),
        'foreign' => 'portalRoles',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'Preferences' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'timeZone' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateFormat' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'timeFormat' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weekStart' => 
      array (
        'type' => 'int',
        'default' => '-1',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'defaultCurrency' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'thousandSeparator' => 
      array (
        'type' => 'varchar',
        'len' => 1,
        'default' => ',',
        'fieldType' => 'varchar',
      ),
      'decimalMark' => 
      array (
        'type' => 'varchar',
        'len' => 1,
        'default' => '.',
        'fieldType' => 'varchar',
      ),
      'dashboardLayout' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'dashletsOptions' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'sharedCalendarUserList' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'calendarViewDataList' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'presetFilters' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'smtpEmailAddress' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpServer' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPort' => 
      array (
        'type' => 'int',
        'default' => '25',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'smtpAuth' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'smtpSecurity' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpUsername' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPassword' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'language' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'exportDelimiter' => 
      array (
        'type' => 'varchar',
        'len' => 1,
        'default' => ',',
        'fieldType' => 'varchar',
      ),
      'receiveAssignmentEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'receiveMentionEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'receiveStreamEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'assignmentNotificationsIgnoreEntityTypeList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'assignmentEmailNotificationsIgnoreEntityTypeList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'autoFollowEntityTypeList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'signature' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'defaultReminders' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'theme' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'useCustomTabList' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'tabList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'emailReplyToAllByDefault' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'emailReplyForceHtml' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'isPortalUser' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'doNotFillAssignedUserIfNotRequired' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'followEntityOnStreamPost' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'followCreatedEntities' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'followCreatedEntityTypeList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'emailUseExternalClient' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'scopeColorsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'tabColorsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
    ),
    'relations' => 
    array (
    ),
  ),
  'Role' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 150,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'assignmentPermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'userPermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'portalPermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'exportPermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'massUpdatePermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dataPrivacyPermission' => 
      array (
        'type' => 'varchar',
        'default' => 'not-set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'fieldData' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'roleTeam',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'roleId',
          1 => 'teamId',
        ),
        'foreign' => 'roles',
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'roleUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'roleId',
          1 => 'userId',
        ),
        'foreign' => 'roles',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'ScheduledJob' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'job' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Active',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'scheduling' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'lastRun' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'isInternal' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'logIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'logNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'log' => 
      array (
        'type' => 'hasMany',
        'entity' => 'ScheduledJobLogRecord',
        'foreignKey' => 'scheduledJobId',
        'foreign' => 'scheduledJob',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'ScheduledJobLogRecord' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'executionTime' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'scheduledJobId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'scheduledJobName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'scheduledJob',
        'foreign' => 'name',
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
      'scheduledJob' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'ScheduledJob',
        'key' => 'scheduledJobId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'scheduledJobIdExecutionTime' => 
      array (
        'type' => 'index',
        'columns' => 
        array (
          0 => 'scheduledJobId',
          1 => 'executionTime',
        ),
        'key' => 'IDX_SCHEDULED_JOB_ID_EXECUTION_TIME',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'executionTime',
      'order' => 'DESC',
    ),
  ),
  'Settings' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'useCache' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'recordsPerPage' => 
      array (
        'type' => 'int',
        'default' => '20',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'recordsPerPageSmall' => 
      array (
        'type' => 'int',
        'default' => '10',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'timeZone' => 
      array (
        'type' => 'varchar',
        'default' => 'UTC',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateFormat' => 
      array (
        'type' => 'varchar',
        'default' => 'MM/DD/YYYY',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'timeFormat' => 
      array (
        'type' => 'varchar',
        'default' => 'HH:mm',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weekStart' => 
      array (
        'type' => 'int',
        'default' => '0',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'fiscalYearShift' => 
      array (
        'type' => 'int',
        'default' => '0',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'thousandSeparator' => 
      array (
        'type' => 'varchar',
        'len' => 1,
        'default' => ',',
        'fieldType' => 'varchar',
      ),
      'decimalMark' => 
      array (
        'type' => 'varchar',
        'len' => 1,
        'default' => '.',
        'fieldType' => 'varchar',
      ),
      'currencyList' => 
      array (
        'type' => 'jsonArray',
        'default' => '["USD","EUR"]',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'defaultCurrency' => 
      array (
        'type' => 'varchar',
        'default' => 'USD',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'baseCurrency' => 
      array (
        'type' => 'varchar',
        'default' => 'USD',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'currencyRates' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'base',
      ),
      'outboundEmailIsShared' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'outboundEmailFromName' => 
      array (
        'type' => 'varchar',
        'default' => 'FinnovaCRM',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'outboundEmailFromAddress' => 
      array (
        'type' => 'varchar',
        'default' => 'crm@example.com',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpServer' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPort' => 
      array (
        'type' => 'int',
        'default' => '587',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'smtpAuth' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'smtpSecurity' => 
      array (
        'type' => 'varchar',
        'default' => 'TLS',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpUsername' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smtpPassword' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'tabList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'quickCreateList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'language' => 
      array (
        'type' => 'varchar',
        'default' => 'en_US',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'globalSearchEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'exportDelimiter' => 
      array (
        'type' => 'varchar',
        'len' => 1,
        'default' => ',',
        'fieldType' => 'varchar',
      ),
      'authenticationMethod' => 
      array (
        'type' => 'varchar',
        'default' => 'Finnova',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'auth2FA' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'auth2FAMethodList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'passwordRecoveryDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'passwordRecoveryForAdminDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'passwordGenerateLength' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'passwordStrengthLength' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'passwordStrengthLetterCount' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'passwordStrengthNumberCount' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'passwordStrengthBothCases' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'ldapHost' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapPort' => 
      array (
        'type' => 'varchar',
        'default' => '389',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapSecurity' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapAuth' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'ldapUsername' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapPassword' => 
      array (
        'type' => 'password',
        'fieldType' => 'password',
      ),
      'ldapBindRequiresDn' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'ldapUserLoginFilter' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapBaseDn' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapAccountCanonicalForm' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapAccountDomainName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapAccountDomainNameShort' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapAccountFilterFormat' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapTryUsernameSplit' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'ldapOptReferrals' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'ldapPortalUserLdapAuth' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'ldapCreateFinnovaUser' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'ldapUserNameAttribute' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapUserObjectClass' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapUserFirstNameAttribute' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapUserLastNameAttribute' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapUserTitleAttribute' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapUserEmailAddressAttribute' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ldapUserPhoneNumberAttribute' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'exportDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'emailNotificationsDelay' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'assignmentEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'assignmentEmailNotificationsEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'assignmentNotificationsEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'postEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'updateEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'mentionEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'streamEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'portalStreamEmailNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'streamEmailNotificationsEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'streamEmailNotificationsTypeList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'b2cMode' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'avatarsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'followCreatedEntities' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'adminPanelIframeUrl' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'displayListViewRecordCount' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'userThemesDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'theme' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailMessageMaxSize' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'inboundEmailMaxPortionSize' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'personalEmailMaxPortionSize' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'maxEmailAccountCount' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'massEmailMaxPerHourCount' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'authTokenLifetime' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '0',
        'fieldType' => 'float',
      ),
      'authTokenMaxIdleTime' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '0',
        'fieldType' => 'float',
      ),
      'authTokenPreventConcurrent' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'dashboardLayout' => 
      array (
        'type' => 'jsonArray',
        'fieldType' => 'jsonArray',
      ),
      'dashletsOptions' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'siteUrl' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'applicationName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'readableDateFormatDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'addressFormat' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'currencyFormat' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'currencyDecimalPlaces' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'notificationSoundsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'calendarEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'activitiesEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'historyEntityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'googleMapsApiKey' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'massEmailDisableMandatoryOptOutLink' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'massEmailOpenTracking' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'aclStrictMode' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'aclAllowDeleteCreated' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'lastViewedCount' => 
      array (
        'type' => 'int',
        'default' => '20',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'adminNotifications' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'adminNotificationsNewVersion' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'adminNotificationsNewExtensionVersion' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'textFilterUseContainsForVarchar' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'scopeColorsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'tabColorsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'tabIconsDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'emailAddressIsOptedOutByDefault' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'outboundEmailBccAddress' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'cleanupDeletedRecords' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'addressCountryList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'addressCityList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'addressStateList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'jobRunInParallel' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'jobMaxPortion' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'jobPoolConcurrencyNumber' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'daemonInterval' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'daemonMaxProcessNumber' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'daemonProcessTimeout' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'cronDisabled' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'maintenanceMode' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'useWebSocket' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'addressPreviewStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'notStorable' => true,
        'fieldType' => 'text',
      ),
      'addressPreviewCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'notStorable' => true,
        'fieldType' => 'varchar',
      ),
      'addressPreviewState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'notStorable' => true,
        'fieldType' => 'varchar',
      ),
      'addressPreviewCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'notStorable' => true,
        'fieldType' => 'varchar',
      ),
      'addressPreviewPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'notStorable' => true,
        'fieldType' => 'varchar',
      ),
      'addressPreviewMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'companyLogoId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => false,
        'notNull' => false,
      ),
      'companyLogoName' => 
      array (
        'type' => 'foreign',
        'relation' => 'companyLogo',
        'foreign' => 'name',
      ),
      'ldapUserDefaultTeamId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'ldapUserDefaultTeam',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'ldapUserDefaultTeamName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'ldapUserTeamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'ldapUserTeams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'ldapUserTeamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'ldapPortalUserPortalsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'ldapPortalUserPortals',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'ldapPortalUserPortalsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'ldapPortalUserRolesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'ldapPortalUserRoles',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'ldapPortalUserRolesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'companyLogo' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Attachment',
        'key' => 'companyLogoId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
  ),
  'Team' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'positionList' => 
      array (
        'type' => 'jsonArray',
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'userRole' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'rolesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'roles',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'rolesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'inboundEmailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'inboundEmailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'notesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'notesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'inboundEmails' => 
      array (
        'type' => 'manyMany',
        'entity' => 'InboundEmail',
        'relationName' => 'inboundEmailTeam',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'teamId',
          1 => 'inboundEmailId',
        ),
        'foreign' => 'teams',
      ),
      'notes' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Note',
        'relationName' => 'noteTeam',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'teamId',
          1 => 'noteId',
        ),
        'foreign' => 'teams',
      ),
      'roles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Role',
        'relationName' => 'roleTeam',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'teamId',
          1 => 'roleId',
        ),
        'foreign' => 'teams',
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'teamUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'teamId',
          1 => 'userId',
        ),
        'foreign' => 'teams',
        'additionalColumns' => 
        array (
          'role' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'Template' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'body' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'header' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'footer' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'entityType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'leftMargin' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '10',
        'fieldType' => 'float',
      ),
      'rightMargin' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '10',
        'fieldType' => 'float',
      ),
      'topMargin' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '10',
        'fieldType' => 'float',
      ),
      'bottomMargin' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '25',
        'fieldType' => 'float',
      ),
      'printFooter' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'footerPosition' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'default' => '15',
        'fieldType' => 'float',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'variables' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'base',
      ),
      'pageOrientation' => 
      array (
        'type' => 'varchar',
        'default' => 'Portrait',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'pageFormat' => 
      array (
        'type' => 'varchar',
        'default' => 'A4',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'pageWidth' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'pageHeight' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'fontFace' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Template',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'UniqueId' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'index' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'terminateAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
      'target' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'targetId',
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'User' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'select' => 'TRIM(CONCAT(IFNULL(user.first_name, \'\'), \' \', IFNULL(user.last_name, \'\')))',
        'where' => 
        array (
          'LIKE' => '(user.first_name LIKE {value} OR user.last_name LIKE {value} OR CONCAT(user.first_name, \' \', user.last_name) LIKE {value} OR CONCAT(user.last_name, \' \', user.first_name) LIKE {value})',
          '=' => '(user.first_name = {value} OR user.last_name = {value} OR CONCAT(user.first_name, \' \', user.last_name) = {value} OR CONCAT(user.last_name, \' \', user.first_name) = {value})',
        ),
        'orderBy' => 'user.first_name {direction}, user.last_name',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'isAdmin' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'userName' => 
      array (
        'type' => 'varchar',
        'len' => 50,
        'fieldType' => 'varchar',
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'len' => 24,
        'index' => true,
        'default' => 'regular',
        'fieldType' => 'varchar',
      ),
      'password' => 
      array (
        'type' => 'password',
        'len' => 150,
        'fieldType' => 'password',
      ),
      'passwordConfirm' => 
      array (
        'type' => 'password',
        'len' => 150,
        'notStorable' => true,
        'fieldType' => 'password',
      ),
      'authMethod' => 
      array (
        'type' => 'varchar',
        'len' => 24,
        'fieldType' => 'varchar',
      ),
      'apiKey' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'secretKey' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'notStorable' => true,
        'fieldType' => 'varchar',
      ),
      'salutationName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'firstName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'default' => '',
        'fieldType' => 'varchar',
      ),
      'lastName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'default' => '',
        'fieldType' => 'varchar',
      ),
      'isActive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'isPortalUser' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'isSuperAdmin' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'title' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'position' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'notStorable' => true,
        'where' => 
        array (
          'LIKE' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'teams',
                1 => 'teamsPosition',
              ),
            ),
            'sql' => 'teamsPositionMiddle.role LIKE {value}',
            'distinct' => true,
          ),
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'teams',
                1 => 'teamsPosition',
              ),
            ),
            'sql' => 'teamsPositionMiddle.role = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'teams',
                1 => 'teamsPosition',
              ),
            ),
            'sql' => 'teamsPositionMiddle.role <> {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'teams',
                1 => 'teamsPosition',
              ),
            ),
            'sql' => 'teamsPositionMiddle.role IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'teams',
                1 => 'teamsPosition',
              ),
            ),
            'sql' => 'teamsPositionMiddle.role IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'fieldType' => 'varchar',
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressUserForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressUserForeignMiddle',
              2 => 
              array (
                'emailAddressUserForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressUserForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressUserForeign',
              2 => 
              array (
                'emailAddressUserForeign.id:' => 'emailAddressUserForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'user.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'User\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberUserForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberUserForeignMiddle',
              2 => 
              array (
                'phoneNumberUserForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberUserForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberUserForeign',
              2 => 
              array (
                'phoneNumberUserForeign.id:' => 'phoneNumberUserForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'user.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'User\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'token' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'authTokenId' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'authLogRecordId' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ipAddress' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatus' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatusMeetings' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'relation' => 'meetings',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatusCalls' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'relation' => 'calls',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'teamRole' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendAccessInfo' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'gender' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'lastAccess' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'notStorable' => true,
        'fieldType' => 'datetime',
      ),
      'aadharno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'accountno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'bankname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'bloodgroup' => 
      array (
        'type' => 'varchar',
        'default' => 'Not Set',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'branch' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'employeeid' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fathername' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ifsccode' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'pancardno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'spouse' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'designations' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'addressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'addressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'addressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'user.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'User\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'defaultTeamId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'defaultTeamName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'defaultTeam',
        'foreign' => 'name',
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'teamsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'role' => 'userRole',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'rolesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'roles',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'rolesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'portals',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalRolesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'portalRoles',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalRolesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'contactId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'contactName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'contact',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'accountsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'accounts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'accountsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'account',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'portalId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'portal',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
        'notNull' => false,
      ),
      'portalName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'avatarId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => false,
        'notNull' => false,
      ),
      'avatarName' => 
      array (
        'type' => 'foreign',
        'relation' => 'avatar',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'dashboardTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'dashboardTemplateName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'dashboardTemplate',
        'foreign' => 'name',
      ),
      'officeLocationId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'officeLocationName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'officeLocation',
        'foreign' => 'name',
      ),
      'addDocumentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'addDocuments',
        'isLinkStub' => false,
      ),
      'addDocumentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'userParentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userParentName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'userParent',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'officeLocationsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'officeLocations',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'officeLocationsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'targetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'notesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'notesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'preferencesId' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'preferencesName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'addDocumentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'User',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'User',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'avatar' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Attachment',
        'key' => 'avatarId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'officeLocations' => 
      array (
        'type' => 'hasMany',
        'entity' => 'OfficeLocation',
        'foreignKey' => 'userId',
        'foreign' => 'user',
      ),
      'userParent' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userParentId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'officeLocation' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'OfficeLocation',
        'key' => 'officeLocationId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'targetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'targetListUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'targetListId',
        ),
        'foreign' => 'users',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Task',
        'foreignKey' => 'assignedUserId',
        'foreign' => 'assignedUser',
      ),
      'accounts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Account',
        'relationName' => 'AccountPortalUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'accountId',
        ),
        'foreign' => 'portalUsers',
      ),
      'contact' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Contact',
        'key' => 'contactId',
        'foreignKey' => 'id',
        'foreign' => 'portalUser',
      ),
      'notes' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Note',
        'relationName' => 'noteUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'noteId',
        ),
        'foreign' => 'users',
      ),
      'emails' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Email',
        'relationName' => 'emailUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'emailId',
        ),
        'foreign' => 'users',
        'additionalColumns' => 
        array (
          'isRead' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
          'isImportant' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
          'inTrash' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
          'folderId' => 
          array (
            'type' => 'varchar',
            'default' => NULL,
            'maxLength' => 24,
          ),
        ),
      ),
      'calls' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Call',
        'relationName' => 'callUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'callId',
        ),
        'foreign' => 'users',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'meetings' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Meeting',
        'relationName' => 'meetingUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'meetingId',
        ),
        'foreign' => 'users',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'preferences' => 
      array (
        'type' => 'hasOne',
        'entity' => 'Preferences',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'dashboardTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'DashboardTemplate',
        'key' => 'dashboardTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'portalRoles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PortalRole',
        'relationName' => 'portalRoleUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'portalRoleId',
        ),
        'foreign' => 'users',
      ),
      'portals' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Portal',
        'relationName' => 'portalUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'portalId',
        ),
        'foreign' => 'users',
      ),
      'roles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Role',
        'relationName' => 'roleUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'roleId',
        ),
        'foreign' => 'users',
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'teamUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'userId',
          1 => 'teamId',
        ),
        'foreign' => 'users',
        'additionalColumns' => 
        array (
          'role' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'defaultTeam' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Team',
        'key' => 'defaultTeamId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'addDocuments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'addDocuments',
            ),
          ),
        ),
        'relationName' => 'attachments',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'userName',
      'order' => 'ASC',
    ),
  ),
  'UserData' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'imapHandlers' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'smtpHandlers' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'auth2FA' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'auth2FAMethod' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'auth2FATotpSecret' => 
      array (
        'type' => 'varchar',
        'len' => 32,
        'fieldType' => 'varchar',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
        'notStorable' => false,
      ),
    ),
    'relations' => 
    array (
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
  ),
  'Webhook' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'event' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'url' => 
      array (
        'type' => 'varchar',
        'len' => 512,
        'fieldType' => 'varchar',
      ),
      'isActive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'entityType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'field' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'secretKey' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'event' => 
      array (
        'columns' => 
        array (
          0 => 'event',
        ),
        'key' => 'IDX_EVENT',
      ),
      'entityTypeType' => 
      array (
        'columns' => 
        array (
          0 => 'entityType',
          1 => 'type',
        ),
        'key' => 'IDX_ENTITY_TYPE_TYPE',
      ),
      'entityTypeField' => 
      array (
        'columns' => 
        array (
          0 => 'entityType',
          1 => 'field',
        ),
        'key' => 'IDX_ENTITY_TYPE_FIELD',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'WebhookEventQueueItem' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'number' => 
      array (
        'type' => 'int',
        'dbType' => 'bigint',
        'autoincrement' => true,
        'unique' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'event' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'isProcessed' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'WebhookQueueItem' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'number' => 
      array (
        'type' => 'int',
        'dbType' => 'bigint',
        'autoincrement' => true,
        'unique' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'event' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'len' => 15,
        'default' => 'Pending',
        'fieldType' => 'varchar',
      ),
      'processedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'attempts' => 
      array (
        'type' => 'int',
        'default' => '0',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'processAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'webhookId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'webhookName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'webhook',
        'foreign' => 'id',
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
      'webhook' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Webhook',
        'key' => 'webhookId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'Account' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'len' => 249,
        'fieldType' => 'varchar',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressAccountForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressAccountForeignMiddle',
              2 => 
              array (
                'emailAddressAccountForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressAccountForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressAccountForeign',
              2 => 
              array (
                'emailAddressAccountForeign.id:' => 'emailAddressAccountForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'account.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Account\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberAccountForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberAccountForeignMiddle',
              2 => 
              array (
                'phoneNumberAccountForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberAccountForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberAccountForeign',
              2 => 
              array (
                'phoneNumberAccountForeign.id:' => 'phoneNumberAccountForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'account.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Account\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'industry' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sicCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'contactRole' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'notStorable' => true,
        'fieldType' => 'varchar',
      ),
      'contactIsInactive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'targetListIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'experience' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'gstno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'wanttoaddgstdetails' => 
      array (
        'type' => 'varchar',
        'default' => 'No',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'howmanygstdetails' => 
      array (
        'type' => 'varchar',
        'default' => '1',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'totalnumberofgst' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'doyouhavegstnum' => 
      array (
        'type' => 'varchar',
        'default' => 'No',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'panno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'account.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Account\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'targetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'targetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'targetList',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
        'notNull' => false,
      ),
      'targetListName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'originalLeadId' => 
      array (
        'type' => 'varchar',
        'index' => 'originalLead',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
      ),
      'originalLeadName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'portalUsersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'portalUsersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksPrimaryIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksPrimaryNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsPrimaryIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsPrimaryNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsPrimaryIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsPrimaryNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsPrimaryIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsPrimaryNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Account',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Account',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'originalLead' => 
      array (
        'type' => 'hasOne',
        'entity' => 'Lead',
        'foreignKey' => 'createdAccountId',
        'foreign' => 'createdAccount',
        'noJoin' => true,
      ),
      'portalUsers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'AccountPortalUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'accountId',
          1 => 'userId',
        ),
        'foreign' => 'accounts',
      ),
      'targetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'accountTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'accountId',
          1 => 'targetListId',
        ),
        'foreign' => 'accounts',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'campaignLogRecords' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'CampaignLogRecord',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'accounts',
        'noJoin' => true,
      ),
      'emails' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Email',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'tasksPrimary' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Task',
        'foreignKey' => 'accountId',
        'foreign' => 'account',
      ),
      'callsPrimary' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'accountId',
        'foreign' => 'account',
      ),
      'emailsPrimary' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Email',
        'foreignKey' => 'accountId',
        'foreign' => 'account',
      ),
      'meetingsPrimary' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'accountId',
        'foreign' => 'account',
      ),
      'documents' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Document',
        'relationName' => 'accountDocument',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'accountId',
          1 => 'documentId',
        ),
        'foreign' => 'accounts',
      ),
      'cases' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Case',
        'foreignKey' => 'accountId',
        'foreign' => 'account',
      ),
      'opportunities' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Opportunity',
        'foreignKey' => 'accountId',
        'foreign' => 'account',
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'accountContact',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'accountId',
          1 => 'contactId',
        ),
        'foreign' => 'accounts',
        'additionalColumns' => 
        array (
          'role' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'isInactive' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Account',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'createdAt' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'deleted',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Call' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Planned',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateStart' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'dateEnd' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'duration' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'default' => '300',
        'select' => 'TIMESTAMPDIFF(SECOND, call.date_start, call.date_end)',
        'orderBy' => 'duration {direction}',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'reminders' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'direction' => 
      array (
        'type' => 'varchar',
        'default' => 'Outbound',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'acceptanceStatus' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'where' => 
        array (
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 'users',
              1 => 'contacts',
              2 => 'leads',
            ),
            'sql' => 'contactsMiddle.status = {value} OR leadsMiddle.status = {value} OR usersMiddle.status = {value}',
            'distinct' => true,
          ),
          '<>' => 'call.id NOT IN (SELECT call_id FROM call_contact WHERE deleted = 0 AND status = {value}) AND call.id NOT IN (SELECT call_id FROM call_user WHERE deleted = 0 AND status = {value}) AND call.id NOT IN (SELECT call_id FROM call_lead WHERE deleted = 0 AND status = {value})',
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 'users',
              1 => 'leads',
              2 => 'contacts',
            ),
            'sql' => 'contactsMiddle.status IN {value} OR leadsMiddle.status IN {value} OR usersMiddle.status IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 'call.id NOT IN (SELECT call_id FROM call_contact WHERE deleted = 0 AND status IN {value}) AND call.id NOT IN (SELECT call_id FROM call_user WHERE deleted = 0 AND status IN {value}) AND call.id NOT IN (SELECT call_id FROM call_lead WHERE deleted = 0 AND status IN {value})',
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 'users',
              1 => 'contacts',
              2 => 'leads',
            ),
            'sql' => 'contactsMiddle.status IS NULL AND leadsMiddle.status IS NULL AND usersMiddle.status IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 'call.id NOT IN (SELECT call_id FROM call_contact WHERE deleted = 0 AND status IS NULL) OR call.id NOT IN (SELECT call_id FROM call_user WHERE deleted = 0 AND status IS NULL) OR call.id NOT IN (SELECT call_id FROM call_lead WHERE deleted = 0 AND status IS NULL)',
        ),
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'phoneNumbersMap' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'fieldType' => 'jsonObject',
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'users',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'usersColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'status' => 'acceptanceStatus',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'contacts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'contactsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'status' => 'acceptanceStatus',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'leadsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'leads',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'leadsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'leadsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'status' => 'acceptanceStatus',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'leads' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Lead',
        'relationName' => 'callLead',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'callId',
          1 => 'leadId',
        ),
        'foreign' => 'calls',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'callContact',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'callId',
          1 => 'contactId',
        ),
        'foreign' => 'calls',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'callUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'callId',
          1 => 'userId',
        ),
        'foreign' => 'calls',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Call',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'dateStartStatus' => 
      array (
        'columns' => 
        array (
          0 => 'dateStart',
          1 => 'status',
        ),
        'key' => 'IDX_DATE_START_STATUS',
      ),
      'dateStart' => 
      array (
        'columns' => 
        array (
          0 => 'dateStart',
          1 => 'deleted',
        ),
        'key' => 'IDX_DATE_START',
      ),
      'status' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'deleted',
        ),
        'key' => 'IDX_STATUS',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
      'assignedUserStatus' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'status',
        ),
        'key' => 'IDX_ASSIGNED_USER_STATUS',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'dateStart',
      'order' => 'DESC',
    ),
  ),
  'Campaign' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Planning',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'default' => 'Email',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'startDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'endDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'sentCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'openedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'clickedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'optedInCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'optedOutCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'bouncedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'hardBouncedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'softBouncedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'leadCreatedCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'openedPercentage' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'clickedPercentage' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'optedOutPercentage' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'bouncedPercentage' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'revenue' => 
      array (
        'type' => 'float',
        'notStorable' => true,
        'fieldType' => 'currency',
        'attributeRole' => 'value',
      ),
      'budget' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'campaign.budget * budgetCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'budgetCurrencyRate',
              2 => 
              array (
                'budgetCurrencyRate.id:' => 'budgetCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'mailMergeOnlyWithAddress' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => true,
        'fieldType' => 'bool',
      ),
      'revenueCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'notStorable' => true,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'budgetCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'targetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'targetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'excludingTargetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'excludingTargetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'excludingTargetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'budgetConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'campaign.budget * budgetCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'budgetCurrencyRate',
              2 => 
              array (
                'budgetCurrencyRate.id:' => 'budgetCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.budget * budgetCurrencyRateCampaignForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'budgetCurrencyRateCampaignForeign',
              2 => 
              array (
                'budgetCurrencyRateCampaignForeign.id:' => '{alias}.budgetCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'campaign.budget * budgetCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'budgetCurrencyRate',
                2 => 
                array (
                  'budgetCurrencyRate.id:' => 'budgetCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'campaign.budget * budgetCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'budgetCurrencyRate',
                2 => 
                array (
                  'budgetCurrencyRate.id:' => 'budgetCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'campaign.budget * budgetCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'budgetCurrencyRate',
                2 => 
                array (
                  'budgetCurrencyRate.id:' => 'budgetCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'campaign.budget * budgetCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'budgetCurrencyRate',
                2 => 
                array (
                  'budgetCurrencyRate.id:' => 'budgetCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'campaign.budget * budgetCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'budgetCurrencyRate',
                2 => 
                array (
                  'budgetCurrencyRate.id:' => 'budgetCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'campaign.budget * budgetCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'budgetCurrencyRate',
                2 => 
                array (
                  'budgetCurrencyRate.id:' => 'budgetCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'campaign.budget IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'campaign.budget IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'budgetConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'budgetCurrencyRate',
              2 => 
              array (
                'budgetCurrencyRate.id:' => 'budgetCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'contactsTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'contactsTemplateName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'contactsTemplate',
        'foreign' => 'name',
      ),
      'leadsTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'leadsTemplateName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'leadsTemplate',
        'foreign' => 'name',
      ),
      'accountsTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountsTemplateName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'accountsTemplate',
        'foreign' => 'name',
      ),
      'usersTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'usersTemplateName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'usersTemplate',
        'foreign' => 'name',
      ),
      'massEmailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'massEmailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'trackingUrlsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'trackingUrlsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'leadsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'leadsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'accountsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'accountsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'usersTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Template',
        'key' => 'usersTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'noJoin' => true,
      ),
      'accountsTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Template',
        'key' => 'accountsTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'noJoin' => true,
      ),
      'leadsTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Template',
        'key' => 'leadsTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'noJoin' => true,
      ),
      'contactsTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Template',
        'key' => 'contactsTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'noJoin' => true,
      ),
      'massEmails' => 
      array (
        'type' => 'hasMany',
        'entity' => 'MassEmail',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
      ),
      'trackingUrls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'CampaignTrackingUrl',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
      ),
      'campaignLogRecords' => 
      array (
        'type' => 'hasMany',
        'entity' => 'CampaignLogRecord',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
      ),
      'opportunities' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Opportunity',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
        'noJoin' => true,
      ),
      'leads' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Lead',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
        'noJoin' => true,
      ),
      'contacts' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Contact',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
        'noJoin' => true,
      ),
      'accounts' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Account',
        'foreignKey' => 'campaignId',
        'foreign' => 'campaign',
        'noJoin' => true,
      ),
      'excludingTargetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'campaignTargetListExcluding',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'campaignId',
          1 => 'targetListId',
        ),
        'foreign' => 'campaignsExcluding',
      ),
      'targetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'campaignTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'campaignId',
          1 => 'targetListId',
        ),
        'foreign' => 'campaigns',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Campaign',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'createdAt' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'deleted',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'CampaignLogRecord' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'action' => 
      array (
        'type' => 'varchar',
        'len' => 50,
        'fieldType' => 'varchar',
      ),
      'actionDate' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'data' => 
      array (
        'type' => 'jsonObject',
        'fieldType' => 'jsonObject',
      ),
      'stringData' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'stringAdditionalData' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'application' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'default' => 'Finnova',
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'isTest' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'objectId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'object',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'objectType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'object',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'objectName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'object',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'queueItemId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'queueItemName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'queueItem',
        'foreign' => 'name',
      ),
    ),
    'relations' => 
    array (
      'object' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'objectId',
      ),
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'queueItem' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailQueueItem',
        'key' => 'queueItemId',
        'foreignKey' => 'id',
        'foreign' => NULL,
        'noJoin' => true,
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'campaignLogRecords',
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'actionDate' => 
      array (
        'columns' => 
        array (
          0 => 'actionDate',
          1 => 'deleted',
        ),
        'key' => 'IDX_ACTION_DATE',
      ),
      'action' => 
      array (
        'columns' => 
        array (
          0 => 'action',
          1 => 'deleted',
        ),
        'key' => 'IDX_ACTION',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'CampaignTrackingUrl' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'url' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'urlToUse' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
    ),
    'relations' => 
    array (
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'trackingUrls',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'name',
      'order' => 'ASC',
    ),
  ),
  'Case' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'number' => 
      array (
        'type' => 'int',
        'autoincrement' => true,
        'unique' => true,
        'index' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'New',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'priority' => 
      array (
        'type' => 'varchar',
        'default' => 'Normal',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'leadId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'leadName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'lead',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'contactId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'contactName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'contact',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'contacts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'inboundEmailId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'inboundEmailName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'inboundEmail',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'articlesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'articlesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'articles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'KnowledgeBaseArticle',
        'relationName' => 'caseKnowledgeBaseArticle',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'caseId',
          1 => 'knowledgeBaseArticleId',
        ),
        'foreign' => 'cases',
      ),
      'emails' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Email',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'caseContact',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'caseId',
          1 => 'contactId',
        ),
        'foreign' => 'cases',
      ),
      'contact' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Contact',
        'key' => 'contactId',
        'foreignKey' => 'id',
        'foreign' => 'casesPrimary',
      ),
      'lead' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Lead',
        'key' => 'leadId',
        'foreignKey' => 'id',
        'foreign' => 'cases',
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => 'cases',
      ),
      'inboundEmail' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'InboundEmail',
        'key' => 'inboundEmailId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Case',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
      ),
    ),
    'indexes' => 
    array (
      'status' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'deleted',
        ),
        'key' => 'IDX_STATUS',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
      'assignedUserStatus' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'status',
        ),
        'key' => 'IDX_ASSIGNED_USER_STATUS',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'number',
      'order' => 'DESC',
    ),
  ),
  'Contact' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'select' => 'TRIM(CONCAT(IFNULL(contact.first_name, \'\'), \' \', IFNULL(contact.last_name, \'\')))',
        'where' => 
        array (
          'LIKE' => '(contact.first_name LIKE {value} OR contact.last_name LIKE {value} OR CONCAT(contact.first_name, \' \', contact.last_name) LIKE {value} OR CONCAT(contact.last_name, \' \', contact.first_name) LIKE {value})',
          '=' => '(contact.first_name = {value} OR contact.last_name = {value} OR CONCAT(contact.first_name, \' \', contact.last_name) = {value} OR CONCAT(contact.last_name, \' \', contact.first_name) = {value})',
        ),
        'orderBy' => 'contact.first_name {direction}, contact.last_name',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'salutationName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'firstName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'default' => '',
        'fieldType' => 'varchar',
      ),
      'lastName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'default' => '',
        'fieldType' => 'varchar',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 255,
        'type' => 'foreignId',
        'where' => 
        array (
          '=' => 'contact.id IN (SELECT contact_id FROM account_contact WHERE deleted = 0 AND account_id = {value})',
          '<>' => 'contact.id NOT IN (SELECT contact_id FROM account_contact WHERE deleted = 0 AND account_id = {value})',
          'IN' => 'contact.id IN (SELECT contact_id FROM account_contact WHERE deleted = 0 AND account_id IN {value})',
          'NOT IN' => 'contact.id NOT IN (SELECT contact_id FROM account_contact WHERE deleted = 0 AND account_id IN {value})',
          'IS NULL' => 'contact.account_id IS NULL',
          'IS NOT NULL' => 'contact.account_id IS NOT NULL',
        ),
        'fieldType' => 'link',
        'index' => true,
        'attributeRole' => 'id',
        'notNull' => false,
      ),
      'title' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'notStorable' => true,
        'select' => 
        array (
          'sql' => 'accountContact.role',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'AccountContact',
              1 => 'accountContact',
              2 => 
              array (
                'contact.id:' => 'accountContact.contactId',
                'contact.accountId:' => 'accountContact.accountId',
                'accountContact.deleted' => false,
              ),
            ),
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'accountContact.role {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'AccountContact',
              1 => 'accountContact',
              2 => 
              array (
                'contact.id:' => 'accountContact.contactId',
                'contact.accountId:' => 'accountContact.accountId',
                'accountContact.deleted' => false,
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 
          array (
            'leftJoins' => 
            array (
              0 => 'accounts',
            ),
            'sql' => 'accountsMiddle.role LIKE {value}',
            'distinct' => true,
          ),
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 'accounts',
            ),
            'sql' => 'accountsMiddle.role = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 'accounts',
            ),
            'sql' => 'accountsMiddle.role <> {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 'accounts',
            ),
            'sql' => 'accountsMiddle.role IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 'accounts',
            ),
            'sql' => 'accountsMiddle.role IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'fieldType' => 'varchar',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressContactForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressContactForeignMiddle',
              2 => 
              array (
                'emailAddressContactForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressContactForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressContactForeign',
              2 => 
              array (
                'emailAddressContactForeign.id:' => 'emailAddressContactForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'contact.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Contact\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberContactForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberContactForeignMiddle',
              2 => 
              array (
                'phoneNumberContactForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberContactForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberContactForeign',
              2 => 
              array (
                'phoneNumberContactForeign.id:' => 'phoneNumberContactForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'contact.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Contact\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'doNotCall' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'addressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'addressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'accountRole' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'accountIsInactive' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'select' => 
        array (
          'sql' => 'accountContact.is_inactive',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'AccountContact',
              1 => 'accountContact',
              2 => 
              array (
                'contact.id:' => 'accountContact.contactId',
                'contact.accountId:' => 'accountContact.accountId',
                'accountContact.deleted' => false,
              ),
            ),
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'accountContact.is_inactive {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'AccountContact',
              1 => 'accountContact',
              2 => 
              array (
                'contact.id:' => 'accountContact.contactId',
                'contact.accountId:' => 'accountContact.accountId',
                'accountContact.deleted' => false,
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '= TRUE' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'AccountContact',
                1 => 'accountContactFilterIsInactive',
                2 => 
                array (
                  'contact.accountId:' => 'accountContactFilterIsInactive.accountId',
                ),
              ),
            ),
            'sql' => 'accountContactFilterIsInactive.is_inactive = true',
          ),
          '= FALSE' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'AccountContact',
                1 => 'accountContactFilterIsInactive',
                2 => 
                array (
                  'contact.accountId:' => 'accountContactFilterIsInactive.accountId',
                ),
              ),
            ),
            'sql' => 'accountContactFilterIsInactive.is_inactive <> true OR accountContactFilterIsInactive.is_inactive IS NULL',
          ),
        ),
        'fieldType' => 'bool',
        'default' => false,
      ),
      'accountType' => 
      array (
        'type' => 'foreign',
        'relation' => 'account',
        'foreign' => 'type',
        'fieldType' => 'foreign',
      ),
      'opportunityRole' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'where' => 
        array (
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 'opportunities',
            ),
            'sql' => 'opportunitiesMiddle.role = {value}',
            'distinct' => true,
          ),
          '<>' => 'contact.id NOT IN (SELECT contact_id FROM contact_opportunity WHERE deleted = 0 AND role = {value})',
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 'opportunities',
            ),
            'sql' => 'opportunitiesMiddle.role IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 'contact.id NOT IN (SELECT contact_id FROM contact_opportunity WHERE deleted = 0 AND role IN {value})',
          'LIKE' => 
          array (
            'leftJoins' => 
            array (
              0 => 'opportunities',
            ),
            'sql' => 'opportunitiesMiddle.role LIKE {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 'opportunities',
            ),
            'sql' => 'opportunitiesMiddle.role IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 'contact.id NOT IN (SELECT contact_id FROM contact_opportunity WHERE deleted = 0 AND role IS NULL)',
        ),
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatus' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatusMeetings' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'relation' => 'meetings',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatusCalls' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'relation' => 'calls',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'targetListIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'addressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'contact.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Contact\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'accountsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'accounts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'accountsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'accountsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'role' => 'contactRole',
          'isInactive' => 'contactIsInactive',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'targetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'targetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'targetList',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
        'notNull' => false,
      ),
      'targetListName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'portalUserId' => 
      array (
        'type' => 'varchar',
        'index' => 'portalUser',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
      ),
      'portalUserName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'originalLeadId' => 
      array (
        'type' => 'varchar',
        'index' => 'originalLead',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
      ),
      'originalLeadName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksPrimaryIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksPrimaryNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesPrimaryIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesPrimaryNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Contact',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Contact',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasksPrimary' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Task',
        'foreignKey' => 'contactId',
        'foreign' => 'contact',
      ),
      'documents' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Document',
        'relationName' => 'contactDocument',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'documentId',
        ),
        'foreign' => 'contacts',
      ),
      'originalLead' => 
      array (
        'type' => 'hasOne',
        'entity' => 'Lead',
        'foreignKey' => 'createdContactId',
        'foreign' => 'createdContact',
        'noJoin' => true,
      ),
      'portalUser' => 
      array (
        'type' => 'hasOne',
        'entity' => 'User',
        'foreignKey' => 'contactId',
        'foreign' => 'contact',
      ),
      'targetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'contactTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'targetListId',
        ),
        'foreign' => 'contacts',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'campaignLogRecords' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'CampaignLogRecord',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'contacts',
        'noJoin' => true,
      ),
      'emails' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Email',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Call',
        'relationName' => 'callContact',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'callId',
        ),
        'foreign' => 'contacts',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'meetings' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Meeting',
        'relationName' => 'contactMeeting',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'meetingId',
        ),
        'foreign' => 'contacts',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'cases' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Case',
        'relationName' => 'caseContact',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'caseId',
        ),
        'foreign' => 'contacts',
      ),
      'casesPrimary' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Case',
        'foreignKey' => 'contactId',
        'foreign' => 'contact',
      ),
      'opportunities' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Opportunity',
        'relationName' => 'contactOpportunity',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'opportunityId',
        ),
        'foreign' => 'contacts',
        'additionalColumns' => 
        array (
          'role' => 
          array (
            'type' => 'varchar',
            'len' => 50,
          ),
        ),
      ),
      'accounts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Account',
        'relationName' => 'accountContact',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'contactId',
          1 => 'accountId',
        ),
        'foreign' => 'contacts',
        'additionalColumns' => 
        array (
          'role' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'isInactive' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Contact',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'createdAt' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'deleted',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
      'firstName' => 
      array (
        'columns' => 
        array (
          0 => 'firstName',
          1 => 'deleted',
        ),
        'key' => 'IDX_FIRST_NAME',
      ),
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'firstName',
          1 => 'lastName',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Document' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'publishDate' => 
      array (
        'type' => 'date',
        'fieldType' => 'date',
      ),
      'expirationDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'fileId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => false,
        'notNull' => false,
      ),
      'fileName' => 
      array (
        'type' => 'foreign',
        'relation' => 'file',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'accountsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'accounts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'accountsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'folderId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'folderName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'folder',
        'foreign' => 'name',
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'leadsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'leadsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'opportunitiesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'file' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Attachment',
        'key' => 'fileId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'folder' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'DocumentFolder',
        'key' => 'folderId',
        'foreignKey' => 'id',
        'foreign' => 'documents',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Document',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'contactDocument',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'documentId',
          1 => 'contactId',
        ),
        'foreign' => 'documents',
      ),
      'leads' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Lead',
        'relationName' => 'documentLead',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'documentId',
          1 => 'leadId',
        ),
        'foreign' => 'documents',
      ),
      'opportunities' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Opportunity',
        'relationName' => 'documentOpportunity',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'documentId',
          1 => 'opportunityId',
        ),
        'foreign' => 'documents',
      ),
      'accounts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Account',
        'relationName' => 'accountDocument',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'documentId',
          1 => 'accountId',
        ),
        'foreign' => 'documents',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'DocumentFolder' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'childList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'parentName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'parent',
        'foreign' => 'name',
      ),
      'documentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'childrenIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'childrenNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'documents' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Document',
        'foreignKey' => 'folderId',
        'foreign' => 'folder',
      ),
      'children' => 
      array (
        'type' => 'hasMany',
        'entity' => 'DocumentFolder',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'parent' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'DocumentFolder',
        'key' => 'parentId',
        'foreignKey' => 'id',
        'foreign' => 'children',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'DocumentFolder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'additionalTables' => 
    array (
      'DocumentFolderPath' => 
      array (
        'fields' => 
        array (
          'id' => 
          array (
            'type' => 'id',
            'dbType' => 'int',
            'len' => '11',
            'autoincrement' => true,
          ),
          'ascendorId' => 
          array (
            'type' => 'varchar',
            'len' => '100',
            'index' => true,
          ),
          'descendorId' => 
          array (
            'type' => 'varchar',
            'len' => '24',
            'index' => true,
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'order' => 'ASC',
    ),
  ),
  'EmailQueueItem' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'attemptCount' => 
      array (
        'type' => 'int',
        'default' => '0',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'sentAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'emailAddress' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'isTest' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'massEmailId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'massEmailName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'massEmail',
        'foreign' => 'name',
      ),
      'targetId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'target',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'targetType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'target',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'targetName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'target',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
    ),
    'relations' => 
    array (
      'target' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'targetId',
      ),
      'massEmail' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'MassEmail',
        'key' => 'massEmailId',
        'foreignKey' => 'id',
        'foreign' => 'queueItems',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'KnowledgeBaseArticle' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Draft',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'language' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'publishDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'expirationDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'order' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'body' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'portalsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'portals',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'portalsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'categoriesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'categories',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'categoriesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'casesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'categories' => 
      array (
        'type' => 'manyMany',
        'entity' => 'KnowledgeBaseCategory',
        'relationName' => 'knowledgeBaseArticleKnowledgeBaseCategory',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'knowledgeBaseArticleId',
          1 => 'knowledgeBaseCategoryId',
        ),
        'foreign' => 'articles',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'KnowledgeBaseArticle',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'portals' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Portal',
        'relationName' => 'knowledgeBaseArticlePortal',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'knowledgeBaseArticleId',
          1 => 'portalId',
        ),
        'foreign' => 'articles',
      ),
      'cases' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Case',
        'relationName' => 'caseKnowledgeBaseArticle',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'knowledgeBaseArticleId',
          1 => 'caseId',
        ),
        'foreign' => 'articles',
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'order',
      'order' => 'ASC',
    ),
  ),
  'KnowledgeBaseCategory' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'order' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'childList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'articlecount' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'categorycount' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'parentName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'parent',
        'foreign' => 'name',
      ),
      'articlesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'articlesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'childrenIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'childrenNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'articles' => 
      array (
        'type' => 'manyMany',
        'entity' => 'KnowledgeBaseArticle',
        'relationName' => 'knowledgeBaseArticleKnowledgeBaseCategory',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'knowledgeBaseCategoryId',
          1 => 'knowledgeBaseArticleId',
        ),
        'foreign' => 'categories',
      ),
      'children' => 
      array (
        'type' => 'hasMany',
        'entity' => 'KnowledgeBaseCategory',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'parent' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'KnowledgeBaseCategory',
        'key' => 'parentId',
        'foreignKey' => 'id',
        'foreign' => 'children',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'KnowledgeBaseCategory',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'additionalTables' => 
    array (
      'KnowledgeBaseCategoryPath' => 
      array (
        'fields' => 
        array (
          'id' => 
          array (
            'type' => 'id',
            'dbType' => 'int',
            'len' => '11',
            'autoincrement' => true,
          ),
          'ascendorId' => 
          array (
            'type' => 'varchar',
            'len' => '100',
            'index' => true,
          ),
          'descendorId' => 
          array (
            'type' => 'varchar',
            'len' => '24',
            'index' => true,
          ),
        ),
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'parentId',
      'order' => 'ASC',
    ),
  ),
  'Lead' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'select' => 'TRIM(CONCAT(IFNULL(lead.first_name, \'\'), \' \', IFNULL(lead.last_name, \'\')))',
        'where' => 
        array (
          'LIKE' => '(lead.first_name LIKE {value} OR lead.last_name LIKE {value} OR CONCAT(lead.first_name, \' \', lead.last_name) LIKE {value} OR CONCAT(lead.last_name, \' \', lead.first_name) LIKE {value})',
          '=' => '(lead.first_name = {value} OR lead.last_name = {value} OR CONCAT(lead.first_name, \' \', lead.last_name) = {value} OR CONCAT(lead.last_name, \' \', lead.first_name) = {value})',
        ),
        'orderBy' => 'lead.first_name {direction}, lead.last_name',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'salutationName' => 
      array (
        'type' => 'varchar',
        'default' => 'Mr.',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'firstName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'lastName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'title' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'New',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'source' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'industry' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'opportunityAmount' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'opportunityAmountCurrencyRate',
              2 => 
              array (
                'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'addressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressLeadForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressLeadForeignMiddle',
              2 => 
              array (
                'emailAddressLeadForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressLeadForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressLeadForeign',
              2 => 
              array (
                'emailAddressLeadForeign.id:' => 'emailAddressLeadForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'lead.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Lead\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberLeadForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberLeadForeignMiddle',
              2 => 
              array (
                'phoneNumberLeadForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberLeadForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberLeadForeign',
              2 => 
              array (
                'phoneNumberLeadForeign.id:' => 'phoneNumberLeadForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'lead.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Lead\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'doNotCall' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'convertedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'accountName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatus' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatusMeetings' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'relation' => 'meetings',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'acceptanceStatusCalls' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'relation' => 'calls',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'targetListIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'leadType' => 
      array (
        'type' => 'varchar',
        'default' => 'Hot Lead',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'opportunityAmountCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'addressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'opportunityAmountConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'opportunityAmountCurrencyRate',
              2 => 
              array (
                'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.opportunity_amount * opportunityAmountCurrencyRateLeadForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'opportunityAmountCurrencyRateLeadForeign',
              2 => 
              array (
                'opportunityAmountCurrencyRateLeadForeign.id:' => '{alias}.opportunityAmountCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'opportunityAmountCurrencyRate',
                2 => 
                array (
                  'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'opportunityAmountCurrencyRate',
                2 => 
                array (
                  'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'opportunityAmountCurrencyRate',
                2 => 
                array (
                  'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'opportunityAmountCurrencyRate',
                2 => 
                array (
                  'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'opportunityAmountCurrencyRate',
                2 => 
                array (
                  'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'lead.opportunity_amount * opportunityAmountCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'opportunityAmountCurrencyRate',
                2 => 
                array (
                  'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'lead.opportunity_amount IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'lead.opportunity_amount IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'opportunityAmountConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'opportunityAmountCurrencyRate',
              2 => 
              array (
                'opportunityAmountCurrencyRate.id:' => 'opportunityAmountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'lead.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Lead\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'createdAccountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdAccountName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdAccount',
        'foreign' => 'name',
      ),
      'createdContactId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdContactName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdContact',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdOpportunityId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdOpportunityName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdOpportunity',
        'foreign' => 'name',
      ),
      'targetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'targetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'targetList',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
        'notNull' => false,
      ),
      'targetListName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'documentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignLogRecordsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'casesNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Lead',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Lead',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'documents' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Document',
        'relationName' => 'documentLead',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'leadId',
          1 => 'documentId',
        ),
        'foreign' => 'leads',
      ),
      'targetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'leadTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'leadId',
          1 => 'targetListId',
        ),
        'foreign' => 'leads',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'campaignLogRecords' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'CampaignLogRecord',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'leads',
        'noJoin' => true,
      ),
      'createdOpportunity' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Opportunity',
        'key' => 'createdOpportunityId',
        'foreignKey' => 'id',
        'foreign' => 'originalLead',
        'noJoin' => true,
      ),
      'createdContact' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Contact',
        'key' => 'createdContactId',
        'foreignKey' => 'id',
        'foreign' => 'originalLead',
        'noJoin' => true,
      ),
      'createdAccount' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'createdAccountId',
        'foreignKey' => 'id',
        'foreign' => 'originalLead',
        'noJoin' => true,
      ),
      'emails' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Email',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'cases' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Case',
        'foreignKey' => 'leadId',
        'foreign' => 'lead',
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Call',
        'relationName' => 'callLead',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'leadId',
          1 => 'callId',
        ),
        'foreign' => 'leads',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'meetings' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Meeting',
        'relationName' => 'leadMeeting',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'leadId',
          1 => 'meetingId',
        ),
        'foreign' => 'leads',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Lead',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'firstName' => 
      array (
        'columns' => 
        array (
          0 => 'firstName',
          1 => 'deleted',
        ),
        'key' => 'IDX_FIRST_NAME',
      ),
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'firstName',
          1 => 'lastName',
        ),
        'key' => 'IDX_NAME',
      ),
      'status' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'deleted',
        ),
        'key' => 'IDX_STATUS',
      ),
      'createdAt' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'deleted',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
      'createdAtStatus' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'status',
        ),
        'key' => 'IDX_CREATED_AT_STATUS',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
      'assignedUserStatus' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'status',
        ),
        'key' => 'IDX_ASSIGNED_USER_STATUS',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'MassEmail' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Pending',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'storeSentEmails' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'optOutEntirely' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'fromAddress' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fromName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyToAddress' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'replyToName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'startAt' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'smtpAccount' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'fieldType' => 'base',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'emailTemplateId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'emailTemplateName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'emailTemplate',
        'foreign' => 'name',
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'targetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'targetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'targetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'excludingTargetListsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'excludingTargetLists',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'excludingTargetListsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'inboundEmailId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'inboundEmailName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'inboundEmail',
        'foreign' => 'name',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'queueItemsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'queueItemsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'queueItems' => 
      array (
        'type' => 'hasMany',
        'entity' => 'EmailQueueItem',
        'foreignKey' => 'massEmailId',
        'foreign' => 'massEmail',
      ),
      'inboundEmail' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'InboundEmail',
        'key' => 'inboundEmailId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'excludingTargetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'massEmailTargetListExcluding',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'massEmailId',
          1 => 'targetListId',
        ),
        'foreign' => 'massEmailsExcluding',
      ),
      'targetLists' => 
      array (
        'type' => 'manyMany',
        'entity' => 'TargetList',
        'relationName' => 'massEmailTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'massEmailId',
          1 => 'targetListId',
        ),
        'foreign' => 'massEmails',
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'massEmails',
      ),
      'emailTemplate' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'EmailTemplate',
        'key' => 'emailTemplateId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Meeting' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Planned',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateStart' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'dateEnd' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'isAllDay' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'duration' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'default' => '3600',
        'select' => 'TIMESTAMPDIFF(SECOND, meeting.date_start, meeting.date_end)',
        'orderBy' => 'duration {direction}',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'reminders' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'acceptanceStatus' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'where' => 
        array (
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 'users',
              1 => 'contacts',
              2 => 'leads',
            ),
            'sql' => 'contactsMiddle.status = {value} OR leadsMiddle.status = {value} OR usersMiddle.status = {value}',
            'distinct' => true,
          ),
          '<>' => 'meeting.id NOT IN (SELECT meeting_id FROM contact_meeting WHERE deleted = 0 AND status = {value}) AND meeting.id NOT IN (SELECT meeting_id FROM meeting_user WHERE deleted = 0 AND status = {value}) AND meeting.id NOT IN (SELECT meeting_id FROM lead_meeting WHERE deleted = 0 AND status = {value})',
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 'users',
              1 => 'leads',
              2 => 'contacts',
            ),
            'sql' => 'contactsMiddle.status IN {value} OR leadsMiddle.status IN {value} OR usersMiddle.status IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 'meeting.id NOT IN (SELECT meeting_id FROM contact_meeting WHERE deleted = 0 AND status IN {value}) AND meeting.id NOT IN (SELECT meeting_id FROM meeting_user WHERE deleted = 0 AND status IN {value}) AND meeting.id NOT IN (SELECT meeting_id FROM lead_meeting WHERE deleted = 0 AND status IN {value})',
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 'users',
              1 => 'contacts',
              2 => 'leads',
            ),
            'sql' => 'contactsMiddle.status IS NULL AND leadsMiddle.status IS NULL AND usersMiddle.status IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 'meeting.id NOT IN (SELECT meeting_id FROM contact_meeting WHERE deleted = 0 AND status IS NULL) OR meeting.id NOT IN (SELECT meeting_id FROM meeting_user WHERE deleted = 0 AND status IS NULL) OR meeting.id NOT IN (SELECT meeting_id FROM lead_meeting WHERE deleted = 0 AND status IS NULL)',
        ),
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateStartDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'dateEndDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'users',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'usersColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'status' => 'acceptanceStatus',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'contacts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'contactsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'status' => 'acceptanceStatus',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'leadsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'leads',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'leadsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'leadsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'status' => 'acceptanceStatus',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'leads' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Lead',
        'relationName' => 'leadMeeting',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'meetingId',
          1 => 'leadId',
        ),
        'foreign' => 'meetings',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'contactMeeting',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'meetingId',
          1 => 'contactId',
        ),
        'foreign' => 'meetings',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'meetingUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'meetingId',
          1 => 'userId',
        ),
        'foreign' => 'meetings',
        'additionalColumns' => 
        array (
          'status' => 
          array (
            'type' => 'varchar',
            'len' => '36',
            'default' => 'None',
          ),
        ),
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Meeting',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'dateStartStatus' => 
      array (
        'columns' => 
        array (
          0 => 'dateStart',
          1 => 'status',
        ),
        'key' => 'IDX_DATE_START_STATUS',
      ),
      'dateStart' => 
      array (
        'columns' => 
        array (
          0 => 'dateStart',
          1 => 'deleted',
        ),
        'key' => 'IDX_DATE_START',
      ),
      'status' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'deleted',
        ),
        'key' => 'IDX_STATUS',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
      'assignedUserStatus' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'status',
        ),
        'key' => 'IDX_ASSIGNED_USER_STATUS',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'dateStart',
      'order' => 'DESC',
    ),
  ),
  'Opportunity' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'amount' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'opportunity.amount * amountCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'amountWeightedConverted' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'notStorable' => true,
        'select' => 
        array (
          'sql' => 'opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'amountWeightedConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => '(opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100) = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => '(opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100) < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => '(opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100) > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => '(opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100) <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => '(opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100) >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => '(opportunity.amount * amountCurrencyRate.rate * opportunity.probability / 100) <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'opportunity.amount IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'opportunity.amount IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
        ),
        'fieldType' => 'float',
      ),
      'stage' => 
      array (
        'type' => 'varchar',
        'default' => 'Unqualified',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'lastStage' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'probability' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'leadSource' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'closeDate' => 
      array (
        'type' => 'date',
        'fieldType' => 'date',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'contactRole' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'where' => 
        array (
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 'contacts',
            ),
            'sql' => 'contactsMiddle.role = {value}',
            'distinct' => true,
          ),
          '<>' => 'opportunity.id NOT IN (SELECT opportunity_id FROM contact_opportunity WHERE deleted = 0 AND role = {value})',
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 'contacts',
            ),
            'sql' => 'contactsMiddle.role IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 'opportunity.id NOT IN (SELECT opportunity_id FROM contact_opportunity WHERE deleted = 0 AND role IN {value})',
          'LIKE' => 
          array (
            'leftJoins' => 
            array (
              0 => 'contacts',
            ),
            'sql' => 'contactsMiddle.role LIKE {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 'contacts',
            ),
            'sql' => 'contactsMiddle.role IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 'opportunity.id NOT IN (SELECT opportunity_id FROM contact_opportunity WHERE deleted = 0 AND role IS NULL)',
        ),
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'lossReason' => 
      array (
        'type' => 'varchar',
        'default' => 'None',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'amountCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'amountConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'opportunity.amount * amountCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.amount * amountCurrencyRateOpportunityForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRateOpportunityForeign',
              2 => 
              array (
                'amountCurrencyRateOpportunityForeign.id:' => '{alias}.amountCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'opportunity.amount * amountCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'opportunity.amount * amountCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'opportunity.amount * amountCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'opportunity.amount * amountCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'opportunity.amount * amountCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'opportunity.amount * amountCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'opportunity.amount IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'opportunity.amount IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'amountConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'contacts',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
        'orderBy' => 'name',
        'isLinkStub' => false,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
        'isLinkStub' => false,
      ),
      'contactsColumns' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'columns' => 
        array (
          'role' => 'opportunityRole',
        ),
        'attributeRole' => 'columnsMap',
      ),
      'campaignId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'campaign',
        'foreign' => 'name',
      ),
      'originalLeadId' => 
      array (
        'type' => 'varchar',
        'index' => 'originalLead',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notStorable' => true,
      ),
      'originalLeadName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'documentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'documentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'emailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'originalLead' => 
      array (
        'type' => 'hasOne',
        'entity' => 'Lead',
        'foreignKey' => 'createdOpportunityId',
        'foreign' => 'createdOpportunity',
        'noJoin' => true,
      ),
      'campaign' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Campaign',
        'key' => 'campaignId',
        'foreignKey' => 'id',
        'foreign' => 'opportunities',
        'noJoin' => true,
      ),
      'documents' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Document',
        'relationName' => 'documentOpportunity',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'opportunityId',
          1 => 'documentId',
        ),
        'foreign' => 'opportunities',
      ),
      'emails' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Email',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'contactOpportunity',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'opportunityId',
          1 => 'contactId',
        ),
        'foreign' => 'opportunities',
        'additionalColumns' => 
        array (
          'role' => 
          array (
            'type' => 'varchar',
            'len' => 50,
          ),
        ),
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => 'opportunities',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Opportunity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'stage' => 
      array (
        'columns' => 
        array (
          0 => 'stage',
          1 => 'deleted',
        ),
        'key' => 'IDX_STAGE',
      ),
      'lastStage' => 
      array (
        'columns' => 
        array (
          0 => 'lastStage',
        ),
        'key' => 'IDX_LAST_STAGE',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
      'createdAt' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'deleted',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
      'createdAtStage' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'stage',
        ),
        'key' => 'IDX_CREATED_AT_STAGE',
      ),
      'assignedUserStage' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'stage',
        ),
        'key' => 'IDX_ASSIGNED_USER_STAGE',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Reminder' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'remindAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'index' => true,
        'fieldType' => 'datetime',
      ),
      'startAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'index' => true,
        'fieldType' => 'datetime',
      ),
      'type' => 
      array (
        'type' => 'varchar',
        'len' => 36,
        'index' => true,
        'default' => 'Popup',
        'fieldType' => 'varchar',
      ),
      'seconds' => 
      array (
        'type' => 'int',
        'default' => '0',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'entityType' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'entityId' => 
      array (
        'type' => 'varchar',
        'len' => 50,
        'fieldType' => 'varchar',
      ),
      'userId' => 
      array (
        'type' => 'varchar',
        'len' => 50,
        'fieldType' => 'varchar',
      ),
      'isSubmitted' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
    ),
    'relations' => 
    array (
    ),
    'collection' => 
    array (
      'orderBy' => 'remindAt',
      'order' => 'DESC',
    ),
  ),
  'Target' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'select' => 'TRIM(CONCAT(IFNULL(target.first_name, \'\'), \' \', IFNULL(target.last_name, \'\')))',
        'where' => 
        array (
          'LIKE' => '(target.first_name LIKE {value} OR target.last_name LIKE {value} OR CONCAT(target.first_name, \' \', target.last_name) LIKE {value} OR CONCAT(target.last_name, \' \', target.first_name) LIKE {value})',
          '=' => '(target.first_name = {value} OR target.last_name = {value} OR CONCAT(target.first_name, \' \', target.last_name) = {value} OR CONCAT(target.last_name, \' \', target.first_name) = {value})',
        ),
        'orderBy' => 'target.first_name {direction}, target.last_name',
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'salutationName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'firstName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'default' => '',
        'fieldType' => 'varchar',
      ),
      'lastName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'default' => '',
        'fieldType' => 'varchar',
      ),
      'title' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'accountName' => 
      array (
        'type' => 'varchar',
        'len' => 100,
        'fieldType' => 'varchar',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'addressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'addressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressTargetForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressTargetForeignMiddle',
              2 => 
              array (
                'emailAddressTargetForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressTargetForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressTargetForeign',
              2 => 
              array (
                'emailAddressTargetForeign.id:' => 'emailAddressTargetForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'target.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Target\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberTargetForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberTargetForeignMiddle',
              2 => 
              array (
                'phoneNumberTargetForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberTargetForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberTargetForeign',
              2 => 
              array (
                'phoneNumberTargetForeign.id:' => 'phoneNumberTargetForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'target.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Target\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'doNotCall' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'addressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'target.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Target\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Target',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Target',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Target',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'firstName' => 
      array (
        'columns' => 
        array (
          0 => 'firstName',
          1 => 'deleted',
        ),
        'key' => 'IDX_FIRST_NAME',
      ),
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'firstName',
          1 => 'lastName',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'TargetList' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'entryCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'optedOutCount' => 
      array (
        'type' => 'int',
        'notStorable' => true,
        'fieldType' => 'int',
        'len' => 11,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'includingActionList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'excludingActionList' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'storeArrayValues' => true,
        'fieldType' => 'jsonArray',
      ),
      'targetStatus' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'isOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'campaignsId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'campaigns',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'campaignsName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'usersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'usersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'leadsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'leadsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'contactsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'accountsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'accountsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'massEmailsExcludingIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'massEmailsExcludingNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignsExcludingIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignsExcludingNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'massEmailsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'massEmailsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'campaignsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => false,
      ),
      'campaignsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => false,
      ),
    ),
    'relations' => 
    array (
      'users' => 
      array (
        'type' => 'manyMany',
        'entity' => 'User',
        'relationName' => 'targetListUser',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'userId',
        ),
        'foreign' => 'targetLists',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'leads' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Lead',
        'relationName' => 'leadTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'leadId',
        ),
        'foreign' => 'targetLists',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'contacts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Contact',
        'relationName' => 'contactTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'contactId',
        ),
        'foreign' => 'targetLists',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'accounts' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Account',
        'relationName' => 'accountTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'accountId',
        ),
        'foreign' => 'targetLists',
        'additionalColumns' => 
        array (
          'optedOut' => 
          array (
            'type' => 'bool',
          ),
        ),
      ),
      'massEmailsExcluding' => 
      array (
        'type' => 'manyMany',
        'entity' => 'MassEmail',
        'relationName' => 'massEmailTargetListExcluding',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'massEmailId',
        ),
        'foreign' => 'excludingTargetLists',
      ),
      'campaignsExcluding' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Campaign',
        'relationName' => 'campaignTargetListExcluding',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'campaignId',
        ),
        'foreign' => 'excludingTargetLists',
      ),
      'massEmails' => 
      array (
        'type' => 'manyMany',
        'entity' => 'MassEmail',
        'relationName' => 'massEmailTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'massEmailId',
        ),
        'foreign' => 'targetLists',
      ),
      'campaigns' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Campaign',
        'relationName' => 'campaignTargetList',
        'key' => 'id',
        'foreignKey' => 'id',
        'midKeys' => 
        array (
          0 => 'targetListId',
          1 => 'campaignId',
        ),
        'foreign' => 'targetLists',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TargetList',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'createdAt' => 
      array (
        'columns' => 
        array (
          0 => 'createdAt',
          1 => 'deleted',
        ),
        'key' => 'IDX_CREATED_AT',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Task' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Open',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'priority' => 
      array (
        'type' => 'varchar',
        'default' => 'Normal',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateStart' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'dateEnd' => 
      array (
        'type' => 'datetime',
        'fieldType' => 'datetime',
      ),
      'dateStartDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'dateEndDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'dateCompleted' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'isOverdue' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'reminders' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'fieldType' => 'jsonArray',
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createRecurringSeriesOfTasks' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'default' => false,
        'fieldType' => 'bool',
      ),
      'startDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'endDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'frequency' => 
      array (
        'type' => 'varchar',
        'default' => 'Daily',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'repeat' => 
      array (
        'type' => 'varchar',
        'default' => 'Every day',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weeklyrepeat' => 
      array (
        'type' => 'varchar',
        'default' => 'Every week',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weeklyrepeatOn' => 
      array (
        'type' => 'varchar',
        'default' => 'Monday',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weeklystartDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'weeklyendDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'monthlyRepeatOn' => 
      array (
        'type' => 'varchar',
        'default' => '01',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'monthlyStartDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'monthlyEndDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'monthlyRepeat' => 
      array (
        'type' => 'varchar',
        'default' => 'Every Month',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'numberOfRecurringTasks' => 
      array (
        'type' => 'varchar',
        'default' => '1',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'customStartDate1' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate2' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate3' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate4' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate5' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate6' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'completedAt' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'closedAt' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'stream' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'parentId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'parent',
        'attributeRole' => 'id',
        'fieldType' => 'linkParent',
        'notNull' => false,
      ),
      'parentType' => 
      array (
        'type' => 'foreignType',
        'notNull' => false,
        'index' => 'parent',
        'len' => 100,
        'attributeRole' => 'type',
        'fieldType' => 'linkParent',
        'dbType' => 'varchar',
      ),
      'parentName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'relation' => 'parent',
        'isParentName' => true,
        'attributeRole' => 'name',
        'fieldType' => 'linkParent',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'contactId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'contactName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'contact',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'contact' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Contact',
        'key' => 'contactId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'parent' => 
      array (
        'type' => 'belongsToParent',
        'key' => 'parentId',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'entityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Task',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => 'tasks',
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
      ),
    ),
    'indexes' => 
    array (
      'dateStartStatus' => 
      array (
        'columns' => 
        array (
          0 => 'dateStart',
          1 => 'status',
        ),
        'key' => 'IDX_DATE_START_STATUS',
      ),
      'dateEndStatus' => 
      array (
        'columns' => 
        array (
          0 => 'dateEnd',
          1 => 'status',
        ),
        'key' => 'IDX_DATE_END_STATUS',
      ),
      'dateStart' => 
      array (
        'columns' => 
        array (
          0 => 'dateStart',
          1 => 'deleted',
        ),
        'key' => 'IDX_DATE_START',
      ),
      'status' => 
      array (
        'columns' => 
        array (
          0 => 'status',
          1 => 'deleted',
        ),
        'key' => 'IDX_STATUS',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
      'assignedUserStatus' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'status',
        ),
        'key' => 'IDX_ASSIGNED_USER_STATUS',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'BillingEntity' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressBillingEntityForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressBillingEntityForeignMiddle',
              2 => 
              array (
                'emailAddressBillingEntityForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressBillingEntityForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressBillingEntityForeign',
              2 => 
              array (
                'emailAddressBillingEntityForeign.id:' => 'emailAddressBillingEntityForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'billing_entity.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'BillingEntity\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberBillingEntityForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberBillingEntityForeignMiddle',
              2 => 
              array (
                'phoneNumberBillingEntityForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberBillingEntityForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberBillingEntityForeign',
              2 => 
              array (
                'phoneNumberBillingEntityForeign.id:' => 'phoneNumberBillingEntityForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'billing_entity.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'BillingEntity\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'panno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'udyamRegistrationNo' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addressstreet' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addresscity' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addressstate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'addresspostalcode' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailid' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'phoneno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'billing_entity.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'BillingEntity\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'BillingEntity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'BillingEntity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'BillingEntity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'ClosedTask' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressClosedTaskForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressClosedTaskForeignMiddle',
              2 => 
              array (
                'emailAddressClosedTaskForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressClosedTaskForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressClosedTaskForeign',
              2 => 
              array (
                'emailAddressClosedTaskForeign.id:' => 'emailAddressClosedTaskForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'closed_task.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'ClosedTask\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberClosedTaskForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberClosedTaskForeignMiddle',
              2 => 
              array (
                'phoneNumberClosedTaskForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberClosedTaskForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberClosedTaskForeign',
              2 => 
              array (
                'phoneNumberClosedTaskForeign.id:' => 'phoneNumberClosedTaskForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'closed_task.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ClosedTask\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'closedat' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'completedat' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createRecurringSeriesOfTasks' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'fieldType' => 'bool',
        'default' => false,
      ),
      'customStartDate1' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate2' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate3' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate4' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate5' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'customStartDate6' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'endDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'frequency' => 
      array (
        'type' => 'varchar',
        'default' => 'Daily',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'monthlyEndDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'monthlyRepeat' => 
      array (
        'type' => 'varchar',
        'default' => 'Every Month',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'monthlyRepeatOn' => 
      array (
        'type' => 'varchar',
        'default' => '01',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'monthlyStartDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'numberOfRecurringTasks' => 
      array (
        'type' => 'varchar',
        'default' => '1',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'repeat' => 
      array (
        'type' => 'varchar',
        'default' => 'Every day',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'startDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'weeklyendDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'weeklyrepeat' => 
      array (
        'type' => 'varchar',
        'default' => 'Every week',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weeklyrepeatOn' => 
      array (
        'type' => 'varchar',
        'default' => 'Monday',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'weeklystartDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'parent' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'priority' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateStart' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateEnd' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dateCompleted' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'closed_task.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ClosedTask\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'attachmentsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'orderBy' => 
        array (
          0 => 
          array (
            0 => 'createdAt',
            1 => 'ASC',
          ),
          1 => 
          array (
            0 => 'name',
            1 => 'ASC',
          ),
        ),
        'isLinkMultipleIdList' => true,
        'relation' => 'attachments',
        'isLinkStub' => false,
      ),
      'attachmentsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'isLinkStub' => false,
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'attachmentsTypes' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ClosedTask',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ClosedTask',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ClosedTask',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'attachments' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Attachment',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
        'conditions' => 
        array (
          'OR' => 
          array (
            0 => 
            array (
              'field' => NULL,
            ),
            1 => 
            array (
              'field' => 'attachments',
            ),
          ),
        ),
        'relationName' => 'attachments',
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'ContactList' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressContactListForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressContactListForeignMiddle',
              2 => 
              array (
                'emailAddressContactListForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressContactListForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressContactListForeign',
              2 => 
              array (
                'emailAddressContactListForeign.id:' => 'emailAddressContactListForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'contact_list.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'ContactList\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberContactListForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberContactListForeignMiddle',
              2 => 
              array (
                'phoneNumberContactListForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberContactListForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberContactListForeign',
              2 => 
              array (
                'phoneNumberContactListForeign.id:' => 'phoneNumberContactListForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'contact_list.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ContactList\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'totalcontacts' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'listname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'totalEmails' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'contact_list.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ContactList\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ContactList',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ContactList',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ContactList',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'ContentTemplate' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'templateName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'principleEntityId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'templateId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'contentType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'categoryType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'senderId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'templateType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'templateContents' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ContentTemplate',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Demo' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressDemoForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressDemoForeignMiddle',
              2 => 
              array (
                'emailAddressDemoForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressDemoForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressDemoForeign',
              2 => 
              array (
                'emailAddressDemoForeign.id:' => 'emailAddressDemoForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'demo.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Demo\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberDemoForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberDemoForeignMiddle',
              2 => 
              array (
                'phoneNumberDemoForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberDemoForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberDemoForeign',
              2 => 
              array (
                'phoneNumberDemoForeign.id:' => 'phoneNumberDemoForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'demo.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Demo\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'demo.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Demo\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Demo',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Demo',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Demo',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Designation' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressDesignationForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressDesignationForeignMiddle',
              2 => 
              array (
                'emailAddressDesignationForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressDesignationForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressDesignationForeign',
              2 => 
              array (
                'emailAddressDesignationForeign.id:' => 'emailAddressDesignationForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'designation.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Designation\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberDesignationForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberDesignationForeignMiddle',
              2 => 
              array (
                'phoneNumberDesignationForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberDesignationForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberDesignationForeign',
              2 => 
              array (
                'phoneNumberDesignationForeign.id:' => 'phoneNumberDesignationForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'designation.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Designation\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'designation.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Designation\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Designation',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Designation',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Designation',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'EmailReminder' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressEmailReminderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressEmailReminderForeignMiddle',
              2 => 
              array (
                'emailAddressEmailReminderForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressEmailReminderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressEmailReminderForeign',
              2 => 
              array (
                'emailAddressEmailReminderForeign.id:' => 'emailAddressEmailReminderForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'email_reminder.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'EmailReminder\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberEmailReminderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberEmailReminderForeignMiddle',
              2 => 
              array (
                'phoneNumberEmailReminderForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberEmailReminderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberEmailReminderForeign',
              2 => 
              array (
                'phoneNumberEmailReminderForeign.id:' => 'phoneNumberEmailReminderForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'email_reminder.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'EmailReminder\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailBody' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'emailCc' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailStatus' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailTo' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fileName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'folderName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendEmailDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'sendEmailTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'time',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'subject' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendEmailDateTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'email_reminder.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'EmailReminder\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'EmailReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'EmailReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'EmailReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Estimate' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressEstimateForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressEstimateForeignMiddle',
              2 => 
              array (
                'emailAddressEstimateForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressEstimateForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressEstimateForeign',
              2 => 
              array (
                'emailAddressEstimateForeign.id:' => 'emailAddressEstimateForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'estimate.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Estimate\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberEstimateForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberEstimateForeignMiddle',
              2 => 
              array (
                'phoneNumberEstimateForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberEstimateForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberEstimateForeign',
              2 => 
              array (
                'phoneNumberEstimateForeign.id:' => 'phoneNumberEstimateForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'estimate.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Estimate\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 200,
        'fieldType' => 'varchar',
      ),
      'adjustments' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'amount' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.amount * amountCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'billfromname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingaddressgstin' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billtoname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'cGST' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'cGSTCurrencyRate',
              2 => 
              array (
                'cGSTCurrencyRate.id:' => 'cGSTCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'date' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'discountamount' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountamountCurrencyRate',
              2 => 
              array (
                'discountamountCurrencyRate.id:' => 'discountamountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'discountoption' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'discounttype' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'discountvalue' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountvalueCurrencyRate',
              2 => 
              array (
                'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'gST' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'gstRate' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'hsn' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'igst' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.igst * igstCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'igstCurrencyRate',
              2 => 
              array (
                'igstCurrencyRate.id:' => 'igstCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'invoiceNumber' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'placeofsupply' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'quantity' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'rate' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.rate * rateCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'rateCurrencyRate',
              2 => 
              array (
                'rateCurrencyRate.id:' => 'rateCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'sGST' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'sGSTCurrencyRate',
              2 => 
              array (
                'sGSTCurrencyRate.id:' => 'sGSTCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'sessionid' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'shippingaddressgstin' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Open',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'subTotal' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'subTotalCurrencyRate',
              2 => 
              array (
                'subTotalCurrencyRate.id:' => 'subTotalCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'total' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'estimate.total * totalCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRate',
              2 => 
              array (
                'totalCurrencyRate.id:' => 'totalCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'estimatedate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billfrompanno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billtopanno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'filename' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'userName' => 
      array (
        'type' => 'varchar',
        'len' => 150,
        'fieldType' => 'varchar',
      ),
      'billingfromemail' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingfromphone' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingtoemail' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingtophone' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingfromUdyamno' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingtoUdyamno' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'poOrderNo' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'termsConditions' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'comment' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'amountCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'cGSTCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'discountamountCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'discountvalueCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'igstCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'rateCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'sGSTCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'subTotalCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'totalCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'estimate.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Estimate\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'amountConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.amount * amountCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.amount * amountCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRateEstimateForeign',
              2 => 
              array (
                'amountCurrencyRateEstimateForeign.id:' => '{alias}.amountCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.amount * amountCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.amount * amountCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.amount * amountCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.amount * amountCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.amount * amountCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.amount * amountCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountCurrencyRate',
                2 => 
                array (
                  'amountCurrencyRate.id:' => 'amountCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.amount IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.amount IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'amountConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountCurrencyRate',
              2 => 
              array (
                'amountCurrencyRate.id:' => 'amountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'cGSTConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'cGSTCurrencyRate',
              2 => 
              array (
                'cGSTCurrencyRate.id:' => 'cGSTCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.c_g_s_t * cGSTCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'cGSTCurrencyRateEstimateForeign',
              2 => 
              array (
                'cGSTCurrencyRateEstimateForeign.id:' => '{alias}.cGSTCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'cGSTCurrencyRate',
                2 => 
                array (
                  'cGSTCurrencyRate.id:' => 'cGSTCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'cGSTCurrencyRate',
                2 => 
                array (
                  'cGSTCurrencyRate.id:' => 'cGSTCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'cGSTCurrencyRate',
                2 => 
                array (
                  'cGSTCurrencyRate.id:' => 'cGSTCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'cGSTCurrencyRate',
                2 => 
                array (
                  'cGSTCurrencyRate.id:' => 'cGSTCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'cGSTCurrencyRate',
                2 => 
                array (
                  'cGSTCurrencyRate.id:' => 'cGSTCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.c_g_s_t * cGSTCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'cGSTCurrencyRate',
                2 => 
                array (
                  'cGSTCurrencyRate.id:' => 'cGSTCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.c_g_s_t IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.c_g_s_t IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'cGSTConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'cGSTCurrencyRate',
              2 => 
              array (
                'cGSTCurrencyRate.id:' => 'cGSTCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'discountamountConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountamountCurrencyRate',
              2 => 
              array (
                'discountamountCurrencyRate.id:' => 'discountamountCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.discountamount * discountamountCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountamountCurrencyRateEstimateForeign',
              2 => 
              array (
                'discountamountCurrencyRateEstimateForeign.id:' => '{alias}.discountamountCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountamountCurrencyRate',
                2 => 
                array (
                  'discountamountCurrencyRate.id:' => 'discountamountCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountamountCurrencyRate',
                2 => 
                array (
                  'discountamountCurrencyRate.id:' => 'discountamountCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountamountCurrencyRate',
                2 => 
                array (
                  'discountamountCurrencyRate.id:' => 'discountamountCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountamountCurrencyRate',
                2 => 
                array (
                  'discountamountCurrencyRate.id:' => 'discountamountCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountamountCurrencyRate',
                2 => 
                array (
                  'discountamountCurrencyRate.id:' => 'discountamountCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.discountamount * discountamountCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountamountCurrencyRate',
                2 => 
                array (
                  'discountamountCurrencyRate.id:' => 'discountamountCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.discountamount IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.discountamount IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'discountamountConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountamountCurrencyRate',
              2 => 
              array (
                'discountamountCurrencyRate.id:' => 'discountamountCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'discountvalueConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountvalueCurrencyRate',
              2 => 
              array (
                'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.discountvalue * discountvalueCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountvalueCurrencyRateEstimateForeign',
              2 => 
              array (
                'discountvalueCurrencyRateEstimateForeign.id:' => '{alias}.discountvalueCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountvalueCurrencyRate',
                2 => 
                array (
                  'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountvalueCurrencyRate',
                2 => 
                array (
                  'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountvalueCurrencyRate',
                2 => 
                array (
                  'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountvalueCurrencyRate',
                2 => 
                array (
                  'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountvalueCurrencyRate',
                2 => 
                array (
                  'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.discountvalue * discountvalueCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'discountvalueCurrencyRate',
                2 => 
                array (
                  'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.discountvalue IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.discountvalue IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'discountvalueConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'discountvalueCurrencyRate',
              2 => 
              array (
                'discountvalueCurrencyRate.id:' => 'discountvalueCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'igstConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.igst * igstCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'igstCurrencyRate',
              2 => 
              array (
                'igstCurrencyRate.id:' => 'igstCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.igst * igstCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'igstCurrencyRateEstimateForeign',
              2 => 
              array (
                'igstCurrencyRateEstimateForeign.id:' => '{alias}.igstCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.igst * igstCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'igstCurrencyRate',
                2 => 
                array (
                  'igstCurrencyRate.id:' => 'igstCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.igst * igstCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'igstCurrencyRate',
                2 => 
                array (
                  'igstCurrencyRate.id:' => 'igstCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.igst * igstCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'igstCurrencyRate',
                2 => 
                array (
                  'igstCurrencyRate.id:' => 'igstCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.igst * igstCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'igstCurrencyRate',
                2 => 
                array (
                  'igstCurrencyRate.id:' => 'igstCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.igst * igstCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'igstCurrencyRate',
                2 => 
                array (
                  'igstCurrencyRate.id:' => 'igstCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.igst * igstCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'igstCurrencyRate',
                2 => 
                array (
                  'igstCurrencyRate.id:' => 'igstCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.igst IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.igst IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'igstConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'igstCurrencyRate',
              2 => 
              array (
                'igstCurrencyRate.id:' => 'igstCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'rateConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.rate * rateCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'rateCurrencyRate',
              2 => 
              array (
                'rateCurrencyRate.id:' => 'rateCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.rate * rateCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'rateCurrencyRateEstimateForeign',
              2 => 
              array (
                'rateCurrencyRateEstimateForeign.id:' => '{alias}.rateCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.rate * rateCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'rateCurrencyRate',
                2 => 
                array (
                  'rateCurrencyRate.id:' => 'rateCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.rate * rateCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'rateCurrencyRate',
                2 => 
                array (
                  'rateCurrencyRate.id:' => 'rateCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.rate * rateCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'rateCurrencyRate',
                2 => 
                array (
                  'rateCurrencyRate.id:' => 'rateCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.rate * rateCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'rateCurrencyRate',
                2 => 
                array (
                  'rateCurrencyRate.id:' => 'rateCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.rate * rateCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'rateCurrencyRate',
                2 => 
                array (
                  'rateCurrencyRate.id:' => 'rateCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.rate * rateCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'rateCurrencyRate',
                2 => 
                array (
                  'rateCurrencyRate.id:' => 'rateCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.rate IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.rate IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'rateConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'rateCurrencyRate',
              2 => 
              array (
                'rateCurrencyRate.id:' => 'rateCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'sGSTConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'sGSTCurrencyRate',
              2 => 
              array (
                'sGSTCurrencyRate.id:' => 'sGSTCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.s_g_s_t * sGSTCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'sGSTCurrencyRateEstimateForeign',
              2 => 
              array (
                'sGSTCurrencyRateEstimateForeign.id:' => '{alias}.sGSTCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'sGSTCurrencyRate',
                2 => 
                array (
                  'sGSTCurrencyRate.id:' => 'sGSTCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'sGSTCurrencyRate',
                2 => 
                array (
                  'sGSTCurrencyRate.id:' => 'sGSTCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'sGSTCurrencyRate',
                2 => 
                array (
                  'sGSTCurrencyRate.id:' => 'sGSTCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'sGSTCurrencyRate',
                2 => 
                array (
                  'sGSTCurrencyRate.id:' => 'sGSTCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'sGSTCurrencyRate',
                2 => 
                array (
                  'sGSTCurrencyRate.id:' => 'sGSTCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.s_g_s_t * sGSTCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'sGSTCurrencyRate',
                2 => 
                array (
                  'sGSTCurrencyRate.id:' => 'sGSTCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.s_g_s_t IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.s_g_s_t IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'sGSTConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'sGSTCurrencyRate',
              2 => 
              array (
                'sGSTCurrencyRate.id:' => 'sGSTCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'subTotalConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'subTotalCurrencyRate',
              2 => 
              array (
                'subTotalCurrencyRate.id:' => 'subTotalCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.sub_total * subTotalCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'subTotalCurrencyRateEstimateForeign',
              2 => 
              array (
                'subTotalCurrencyRateEstimateForeign.id:' => '{alias}.subTotalCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'subTotalCurrencyRate',
                2 => 
                array (
                  'subTotalCurrencyRate.id:' => 'subTotalCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'subTotalCurrencyRate',
                2 => 
                array (
                  'subTotalCurrencyRate.id:' => 'subTotalCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'subTotalCurrencyRate',
                2 => 
                array (
                  'subTotalCurrencyRate.id:' => 'subTotalCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'subTotalCurrencyRate',
                2 => 
                array (
                  'subTotalCurrencyRate.id:' => 'subTotalCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'subTotalCurrencyRate',
                2 => 
                array (
                  'subTotalCurrencyRate.id:' => 'subTotalCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.sub_total * subTotalCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'subTotalCurrencyRate',
                2 => 
                array (
                  'subTotalCurrencyRate.id:' => 'subTotalCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.sub_total IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.sub_total IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'subTotalConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'subTotalCurrencyRate',
              2 => 
              array (
                'subTotalCurrencyRate.id:' => 'subTotalCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'totalConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'estimate.total * totalCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRate',
              2 => 
              array (
                'totalCurrencyRate.id:' => 'totalCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.total * totalCurrencyRateEstimateForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRateEstimateForeign',
              2 => 
              array (
                'totalCurrencyRateEstimateForeign.id:' => '{alias}.totalCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'estimate.total * totalCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'estimate.total * totalCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'estimate.total * totalCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'estimate.total * totalCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'estimate.total * totalCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'estimate.total * totalCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'estimate.total IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'estimate.total IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'totalConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRate',
              2 => 
              array (
                'totalCurrencyRate.id:' => 'totalCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Estimate',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Estimate',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Estimate',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Export' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressExportForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressExportForeignMiddle',
              2 => 
              array (
                'emailAddressExportForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressExportForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressExportForeign',
              2 => 
              array (
                'emailAddressExportForeign.id:' => 'emailAddressExportForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'export.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Export\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberExportForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberExportForeignMiddle',
              2 => 
              array (
                'phoneNumberExportForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberExportForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberExportForeign',
              2 => 
              array (
                'phoneNumberExportForeign.id:' => 'phoneNumberExportForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'export.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Export\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'export.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Export\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Export',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Export',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Export',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'ExportResult' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressExportResultForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressExportResultForeignMiddle',
              2 => 
              array (
                'emailAddressExportResultForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressExportResultForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressExportResultForeign',
              2 => 
              array (
                'emailAddressExportResultForeign.id:' => 'emailAddressExportResultForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'export_result.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'ExportResult\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberExportResultForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberExportResultForeignMiddle',
              2 => 
              array (
                'phoneNumberExportResultForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberExportResultForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberExportResultForeign',
              2 => 
              array (
                'phoneNumberExportResultForeign.id:' => 'phoneNumberExportResultForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'export_result.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ExportResult\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'entity' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'isCronJob' => 
      array (
        'type' => 'varchar',
        'default' => '0',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'file' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => '0',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dbQuery' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'isExported' => 
      array (
        'type' => 'varchar',
        'default' => 'Pending',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'columns' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'export_result.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ExportResult\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ExportResult',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ExportResult',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ExportResult',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'HolidayCalender' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressHolidayCalenderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressHolidayCalenderForeignMiddle',
              2 => 
              array (
                'emailAddressHolidayCalenderForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressHolidayCalenderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressHolidayCalenderForeign',
              2 => 
              array (
                'emailAddressHolidayCalenderForeign.id:' => 'emailAddressHolidayCalenderForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'holiday_calender.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'HolidayCalender\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberHolidayCalenderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberHolidayCalenderForeignMiddle',
              2 => 
              array (
                'phoneNumberHolidayCalenderForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberHolidayCalenderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberHolidayCalenderForeign',
              2 => 
              array (
                'phoneNumberHolidayCalenderForeign.id:' => 'phoneNumberHolidayCalenderForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'holiday_calender.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'HolidayCalender\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'holiday_calender.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'HolidayCalender\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'HolidayCalender',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'HolidayCalender',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'HolidayCalender',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'ImportResult' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressImportResultForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressImportResultForeignMiddle',
              2 => 
              array (
                'emailAddressImportResultForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressImportResultForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressImportResultForeign',
              2 => 
              array (
                'emailAddressImportResultForeign.id:' => 'emailAddressImportResultForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'import_result.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'ImportResult\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberImportResultForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberImportResultForeignMiddle',
              2 => 
              array (
                'phoneNumberImportResultForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberImportResultForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberImportResultForeign',
              2 => 
              array (
                'phoneNumberImportResultForeign.id:' => 'phoneNumberImportResultForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'import_result.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ImportResult\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'entityName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'noOfRecords' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'import_result.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'ImportResult\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ImportResult',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ImportResult',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'ImportResult',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Invoice' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressInvoiceForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressInvoiceForeignMiddle',
              2 => 
              array (
                'emailAddressInvoiceForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressInvoiceForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressInvoiceForeign',
              2 => 
              array (
                'emailAddressInvoiceForeign.id:' => 'emailAddressInvoiceForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'invoice.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Invoice\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberInvoiceForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberInvoiceForeignMiddle',
              2 => 
              array (
                'phoneNumberInvoiceForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberInvoiceForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberInvoiceForeign',
              2 => 
              array (
                'phoneNumberInvoiceForeign.id:' => 'phoneNumberInvoiceForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'invoice.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Invoice\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 200,
        'fieldType' => 'varchar',
      ),
      'accountid' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'accountno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'adjustments' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'balance' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'invoice.balance * balanceCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRate',
              2 => 
              array (
                'balanceCurrencyRate.id:' => 'balanceCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'bankname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'beneficiary' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billfromname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingaddressgstin' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billtoname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'branch' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'buyerorderno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'discountamount' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'date' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'discountoption' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'discounttype' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'discountvalue' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'dueDate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'duedate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'estimateid' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'estimateno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'gst' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'hsn' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'ifsc' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'invoicedate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'invoiceno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'orderdate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'paymentDate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'paymentStatus' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'paymentdate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'paymentstatus' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'placeofsupply' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'shippingaddressgstin' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'total' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'invoice.total * totalCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRate',
              2 => 
              array (
                'totalCurrencyRate.id:' => 'totalCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'billfrompan' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billtopan' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'filename' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingEntityId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'numberOfDays' => 
      array (
        'type' => 'int',
        'fieldType' => 'int',
        'len' => 11,
      ),
      'invoiceDatefilter' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'invoiceDuedatefilter' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'holderName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'bankUpi' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'bankaccountType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'cgst' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'sgst' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'gstRate' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'igst' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'rate' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'subTotal' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'totalDiscount' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'totalTax' => 
      array (
        'type' => 'float',
        'notNull' => false,
        'fieldType' => 'float',
      ),
      'billingfromemail' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingfromphone' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingtoemail' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingtophone' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingfromUdyamno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'billingtoUdyamno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'poOrderNo' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'termsConditions' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'userName' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'balanceCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'totalCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'invoice.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Invoice\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'account1Id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'account1Name' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account1',
        'foreign' => 'name',
      ),
      'balanceConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'invoice.balance * balanceCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRate',
              2 => 
              array (
                'balanceCurrencyRate.id:' => 'balanceCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.balance * balanceCurrencyRateInvoiceForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRateInvoiceForeign',
              2 => 
              array (
                'balanceCurrencyRateInvoiceForeign.id:' => '{alias}.balanceCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'invoice.balance * balanceCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'invoice.balance * balanceCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'invoice.balance * balanceCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'invoice.balance * balanceCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'invoice.balance * balanceCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'invoice.balance * balanceCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'invoice.balance IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'invoice.balance IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'balanceConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRate',
              2 => 
              array (
                'balanceCurrencyRate.id:' => 'balanceCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'totalConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'invoice.total * totalCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRate',
              2 => 
              array (
                'totalCurrencyRate.id:' => 'totalCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.total * totalCurrencyRateInvoiceForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRateInvoiceForeign',
              2 => 
              array (
                'totalCurrencyRateInvoiceForeign.id:' => '{alias}.totalCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'invoice.total * totalCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'invoice.total * totalCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'invoice.total * totalCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'invoice.total * totalCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'invoice.total * totalCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'invoice.total * totalCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'totalCurrencyRate',
                2 => 
                array (
                  'totalCurrencyRate.id:' => 'totalCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'invoice.total IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'invoice.total IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'totalConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'totalCurrencyRate',
              2 => 
              array (
                'totalCurrencyRate.id:' => 'totalCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'account',
        'foreign' => 'name',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Invoice',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Invoice',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'account' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'accountId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'account1' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'Account',
        'key' => 'account1Id',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Invoice',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'MessageLog' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressMessageLogForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressMessageLogForeignMiddle',
              2 => 
              array (
                'emailAddressMessageLogForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressMessageLogForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressMessageLogForeign',
              2 => 
              array (
                'emailAddressMessageLogForeign.id:' => 'emailAddressMessageLogForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'message_log.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'MessageLog\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberMessageLogForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberMessageLogForeignMiddle',
              2 => 
              array (
                'phoneNumberMessageLogForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberMessageLogForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberMessageLogForeign',
              2 => 
              array (
                'phoneNumberMessageLogForeign.id:' => 'phoneNumberMessageLogForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'message_log.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'MessageLog\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'subDomainName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'totalMessages' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sentMessages' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'remainingMessages' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'planExpiryDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'senderId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'message_log.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'MessageLog\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'MessageLog',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'MessageLog',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'MessageLog',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'MyCampaigns' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressMyCampaignsForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressMyCampaignsForeignMiddle',
              2 => 
              array (
                'emailAddressMyCampaignsForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressMyCampaignsForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressMyCampaignsForeign',
              2 => 
              array (
                'emailAddressMyCampaignsForeign.id:' => 'emailAddressMyCampaignsForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'my_campaigns.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'MyCampaigns\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberMyCampaignsForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberMyCampaignsForeignMiddle',
              2 => 
              array (
                'phoneNumberMyCampaignsForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberMyCampaignsForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberMyCampaignsForeign',
              2 => 
              array (
                'phoneNumberMyCampaignsForeign.id:' => 'phoneNumberMyCampaignsForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'my_campaigns.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'MyCampaigns\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'campaignsName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'listName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'listId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smsBody' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'sendFrom' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendSmsTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendSmsDate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'domainname' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'contentTemplateId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'contentTemplateName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'scheduledAt' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'my_campaigns.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'MyCampaigns\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'MyCampaigns',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'MyCampaigns',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'MyCampaigns',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'OfficeLocation' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressOfficeLocationForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressOfficeLocationForeignMiddle',
              2 => 
              array (
                'emailAddressOfficeLocationForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressOfficeLocationForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressOfficeLocationForeign',
              2 => 
              array (
                'emailAddressOfficeLocationForeign.id:' => 'emailAddressOfficeLocationForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'office_location.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'OfficeLocation\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberOfficeLocationForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberOfficeLocationForeignMiddle',
              2 => 
              array (
                'phoneNumberOfficeLocationForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberOfficeLocationForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberOfficeLocationForeign',
              2 => 
              array (
                'phoneNumberOfficeLocationForeign.id:' => 'phoneNumberOfficeLocationForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'office_location.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'OfficeLocation\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'gstin' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'typeofoffice' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'office_location.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'OfficeLocation\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'userId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'userName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'user',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'OfficeLocation',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'OfficeLocation',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'user' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'userId',
        'foreignKey' => 'id',
        'foreign' => 'officeLocations',
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'OfficeLocation',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Payments' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressPaymentsForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressPaymentsForeignMiddle',
              2 => 
              array (
                'emailAddressPaymentsForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressPaymentsForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressPaymentsForeign',
              2 => 
              array (
                'emailAddressPaymentsForeign.id:' => 'emailAddressPaymentsForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'payments.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'Payments\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberPaymentsForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberPaymentsForeignMiddle',
              2 => 
              array (
                'phoneNumberPaymentsForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberPaymentsForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberPaymentsForeign',
              2 => 
              array (
                'phoneNumberPaymentsForeign.id:' => 'phoneNumberPaymentsForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'payments.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Payments\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'amountcredited' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountcreditedCurrencyRate',
              2 => 
              array (
                'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'balance' => 
      array (
        'type' => 'float',
        'fieldType' => 'currency',
        'orderBy' => 
        array (
          'sql' => 'payments.balance * balanceCurrencyRate.rate {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRate',
              2 => 
              array (
                'balanceCurrencyRate.id:' => 'balanceCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'value',
      ),
      'billedamount' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createddate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'invoiceno' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'mode' => 
      array (
        'type' => 'varchar',
        'default' => 'Cash',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'paymentdate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'paymentstatus' => 
      array (
        'type' => 'varchar',
        'default' => '',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'paymenttype' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'pdate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'tds' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'transactionid' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'accountName1' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'amountcreditedCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'balanceCurrency' => 
      array (
        'type' => 'varchar',
        'len' => 6,
        'fieldType' => 'currency',
        'attributeRole' => 'currency',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'payments.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'Payments\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'amountcreditedConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountcreditedCurrencyRate',
              2 => 
              array (
                'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.amountcredited * amountcreditedCurrencyRatePaymentsForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountcreditedCurrencyRatePaymentsForeign',
              2 => 
              array (
                'amountcreditedCurrencyRatePaymentsForeign.id:' => '{alias}.amountcreditedCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountcreditedCurrencyRate',
                2 => 
                array (
                  'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountcreditedCurrencyRate',
                2 => 
                array (
                  'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountcreditedCurrencyRate',
                2 => 
                array (
                  'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountcreditedCurrencyRate',
                2 => 
                array (
                  'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountcreditedCurrencyRate',
                2 => 
                array (
                  'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'payments.amountcredited * amountcreditedCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'amountcreditedCurrencyRate',
                2 => 
                array (
                  'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'payments.amountcredited IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'payments.amountcredited IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'amountcreditedConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'amountcreditedCurrencyRate',
              2 => 
              array (
                'amountcreditedCurrencyRate.id:' => 'amountcreditedCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'balanceConverted' => 
      array (
        'type' => 'float',
        'select' => 
        array (
          'sql' => 'payments.balance * balanceCurrencyRate.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRate',
              2 => 
              array (
                'balanceCurrencyRate.id:' => 'balanceCurrency',
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => '{alias}.balance * balanceCurrencyRatePaymentsForeign.rate',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRatePaymentsForeign',
              2 => 
              array (
                'balanceCurrencyRatePaymentsForeign.id:' => '{alias}.balanceCurrency',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          '=' => 
          array (
            'sql' => 'payments.balance * balanceCurrencyRate.rate = {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '>' => 
          array (
            'sql' => 'payments.balance * balanceCurrencyRate.rate > {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '<' => 
          array (
            'sql' => 'payments.balance * balanceCurrencyRate.rate < {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '>=' => 
          array (
            'sql' => 'payments.balance * balanceCurrencyRate.rate >= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '<=' => 
          array (
            'sql' => 'payments.balance * balanceCurrencyRate.rate <= {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          '<>' => 
          array (
            'sql' => 'payments.balance * balanceCurrencyRate.rate <> {value}',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'Currency',
                1 => 'balanceCurrencyRate',
                2 => 
                array (
                  'balanceCurrencyRate.id:' => 'balanceCurrency',
                ),
              ),
            ),
          ),
          'IS NULL' => 
          array (
            'sql' => 'payments.balance IS NULL',
          ),
          'IS NOT NULL' => 
          array (
            'sql' => 'payments.balance IS NOT NULL',
          ),
        ),
        'notStorable' => true,
        'orderBy' => 
        array (
          'sql' => 'balanceConverted {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'Currency',
              1 => 'balanceCurrencyRate',
              2 => 
              array (
                'balanceCurrencyRate.id:' => 'balanceCurrency',
              ),
            ),
          ),
        ),
        'attributeRole' => 'valueConverted',
        'fieldType' => 'currency',
      ),
      'accountId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => 'account',
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'accountName' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'attributeRole' => 'name',
        'fieldType' => 'link',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Payments',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Payments',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Payments',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'SMSReminder' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressSMSReminderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressSMSReminderForeignMiddle',
              2 => 
              array (
                'emailAddressSMSReminderForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressSMSReminderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressSMSReminderForeign',
              2 => 
              array (
                'emailAddressSMSReminderForeign.id:' => 'emailAddressSMSReminderForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 's_m_s_reminder.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'SMSReminder\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberSMSReminderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberSMSReminderForeignMiddle',
              2 => 
              array (
                'phoneNumberSMSReminderForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberSMSReminderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberSMSReminderForeign',
              2 => 
              array (
                'phoneNumberSMSReminderForeign.id:' => 'phoneNumberSMSReminderForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 's_m_s_reminder.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SMSReminder\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'folderName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'mobileNo' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'reminderDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'reminderTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'Time',
      ),
      'smsBody' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'smsStatus' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendSmsDateTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendFrom' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'contentTemplateName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 's_m_s_reminder.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SMSReminder\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SMSReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SMSReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SMSReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'SendSMSData' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressSendSMSDataForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressSendSMSDataForeignMiddle',
              2 => 
              array (
                'emailAddressSendSMSDataForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressSendSMSDataForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressSendSMSDataForeign',
              2 => 
              array (
                'emailAddressSendSMSDataForeign.id:' => 'emailAddressSendSMSDataForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'send_s_m_s_data.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'SendSMSData\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberSendSMSDataForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberSendSMSDataForeignMiddle',
              2 => 
              array (
                'phoneNumberSendSMSDataForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberSendSMSDataForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberSendSMSDataForeign',
              2 => 
              array (
                'phoneNumberSendSMSDataForeign.id:' => 'phoneNumberSendSMSDataForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'send_s_m_s_data.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SendSMSData\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'deliveryStatus' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'folderName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'mobileNo' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'reminderDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'reminderTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'time',
      ),
      'smsBody' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'smsShootId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smsStatus' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendSmsDateTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'contentTemplateName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendFrom' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'send_s_m_s_data.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SendSMSData\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SendSMSData',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SendSMSData',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SendSMSData',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'SenderID' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'senderId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'categoryType' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'default' => 'Active',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SenderID',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'SentEmailReminder' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressSentEmailReminderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressSentEmailReminderForeignMiddle',
              2 => 
              array (
                'emailAddressSentEmailReminderForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressSentEmailReminderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressSentEmailReminderForeign',
              2 => 
              array (
                'emailAddressSentEmailReminderForeign.id:' => 'emailAddressSentEmailReminderForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'sent_email_reminder.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'SentEmailReminder\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberSentEmailReminderForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberSentEmailReminderForeignMiddle',
              2 => 
              array (
                'phoneNumberSentEmailReminderForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberSentEmailReminderForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberSentEmailReminderForeign',
              2 => 
              array (
                'phoneNumberSentEmailReminderForeign.id:' => 'phoneNumberSentEmailReminderForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'sent_email_reminder.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SentEmailReminder\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailBody' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'emailCc' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailStatus' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailTo' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'fileName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'folderName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendEmailDate' => 
      array (
        'type' => 'date',
        'notNull' => false,
        'fieldType' => 'date',
      ),
      'sendEmailTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'time',
      ),
      'status' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'subject' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendEmailDateTime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'sent_email_reminder.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SentEmailReminder\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SentEmailReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SentEmailReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SentEmailReminder',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'SentMessages' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressSentMessagesForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressSentMessagesForeignMiddle',
              2 => 
              array (
                'emailAddressSentMessagesForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressSentMessagesForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressSentMessagesForeign',
              2 => 
              array (
                'emailAddressSentMessagesForeign.id:' => 'emailAddressSentMessagesForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'sent_messages.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'SentMessages\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberSentMessagesForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberSentMessagesForeignMiddle',
              2 => 
              array (
                'phoneNumberSentMessagesForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberSentMessagesForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberSentMessagesForeign',
              2 => 
              array (
                'phoneNumberSentMessagesForeign.id:' => 'phoneNumberSentMessagesForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'sent_messages.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SentMessages\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'campaignsName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'listName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'listId' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'smsBody' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'sendFrom' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendsmsdate' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'sendsmstime' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'totalSentSms' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'totalDeliveredSMS' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'totalNotDeliveredSMS' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'contentTemplateName' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'scheduledAt' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'sent_messages.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'SentMessages\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SentMessages',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SentMessages',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'SentMessages',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'TEsting2811' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressTEsting2811Foreign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressTEsting2811ForeignMiddle',
              2 => 
              array (
                'emailAddressTEsting2811ForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressTEsting2811ForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressTEsting2811Foreign',
              2 => 
              array (
                'emailAddressTEsting2811Foreign.id:' => 'emailAddressTEsting2811ForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 't_esting2811.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'TEsting2811\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberTEsting2811Foreign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberTEsting2811ForeignMiddle',
              2 => 
              array (
                'phoneNumberTEsting2811ForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberTEsting2811ForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberTEsting2811Foreign',
              2 => 
              array (
                'phoneNumberTEsting2811Foreign.id:' => 'phoneNumberTEsting2811ForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 't_esting2811.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'TEsting2811\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 't_esting2811.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'TEsting2811\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TEsting2811',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TEsting2811',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TEsting2811',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'Test' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
    ),
    'relations' => 
    array (
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'Test',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'TestEntity2710' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressTestEntity2710Foreign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressTestEntity2710ForeignMiddle',
              2 => 
              array (
                'emailAddressTestEntity2710ForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressTestEntity2710ForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressTestEntity2710Foreign',
              2 => 
              array (
                'emailAddressTestEntity2710Foreign.id:' => 'emailAddressTestEntity2710ForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'test_entity2710.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'TestEntity2710\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberTestEntity2710Foreign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberTestEntity2710ForeignMiddle',
              2 => 
              array (
                'phoneNumberTestEntity2710ForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberTestEntity2710ForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberTestEntity2710Foreign',
              2 => 
              array (
                'phoneNumberTestEntity2710Foreign.id:' => 'phoneNumberTestEntity2710ForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'test_entity2710.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'TestEntity2710\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'test_entity2710.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'TestEntity2710\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TestEntity2710',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TestEntity2710',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TestEntity2710',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
  'TestingEntity' => 
  array (
    'fields' => 
    array (
      'id' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'id',
      ),
      'name' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'deleted' => 
      array (
        'type' => 'bool',
        'default' => false,
      ),
      'description' => 
      array (
        'type' => 'text',
        'fieldType' => 'text',
      ),
      'website' => 
      array (
        'type' => 'varchar',
        'fieldType' => 'varchar',
        'len' => 255,
      ),
      'emailAddress' => 
      array (
        'type' => 'email',
        'notStorable' => true,
        'fieldType' => 'email',
        'select' => 
        array (
          'sql' => 'emailAddresses.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'emailAddressTestingEntityForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityEmailAddress',
              1 => 'emailAddressTestingEntityForeignMiddle',
              2 => 
              array (
                'emailAddressTestingEntityForeignMiddle.entityId:' => '{alias}.id',
                'emailAddressTestingEntityForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'EmailAddress',
              1 => 'emailAddressTestingEntityForeign',
              2 => 
              array (
                'emailAddressTestingEntityForeign.id:' => 'emailAddressTestingEntityForeignMiddle.emailAddressId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'testing_entity.id IN (
                                SELECT entity_id
                                FROM entity_email_address
                                JOIN email_address ON email_address.id = entity_email_address.email_address_id
                                WHERE
                                    entity_email_address.deleted = 0 AND entity_email_address.entity_type = \'TestingEntity\' AND
                                    email_address.deleted = 0 AND email_address.lower LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddressesMultiple',
              ),
            ),
            'sql' => 'emailAddressesMultiple.lower IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'emailAddresses.lower {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'emailAddresses',
              1 => 'emailAddresses',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'phoneNumber' => 
      array (
        'type' => 'phone',
        'notStorable' => true,
        'fieldType' => 'phone',
        'select' => 
        array (
          'sql' => 'phoneNumbers.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
        'selectForeign' => 
        array (
          'sql' => 'phoneNumberTestingEntityForeign.name',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'EntityPhoneNumber',
              1 => 'phoneNumberTestingEntityForeignMiddle',
              2 => 
              array (
                'phoneNumberTestingEntityForeignMiddle.entityId:' => '{alias}.id',
                'phoneNumberTestingEntityForeignMiddle.primary' => 1,
              ),
            ),
            1 => 
            array (
              0 => 'PhoneNumber',
              1 => 'phoneNumberTestingEntityForeign',
              2 => 
              array (
                'phoneNumberTestingEntityForeign.id:' => 'phoneNumberTestingEntityForeignMiddle.phoneNumberId',
              ),
            ),
          ),
        ),
        'where' => 
        array (
          'LIKE' => 'testing_entity.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'TestingEntity\' AND
                                    phone_number.deleted = 0 AND phone_number.name LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersMultiple',
              ),
            ),
            'sql' => 'phoneNumbersMultiple.name IS NOT NULL',
            'distinct' => true,
          ),
        ),
        'orderBy' => 
        array (
          'sql' => 'phoneNumbers.name {direction}',
          'leftJoins' => 
          array (
            0 => 
            array (
              0 => 'phoneNumbers',
              1 => 'phoneNumbers',
              2 => 
              array (
                'primary' => 1,
              ),
            ),
          ),
        ),
      ),
      'billingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'billingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'billingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'shippingAddressStreet' => 
      array (
        'type' => 'text',
        'dbType' => 'varchar',
        'len' => 255,
        'fieldType' => 'text',
      ),
      'shippingAddressCity' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressState' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressCountry' => 
      array (
        'type' => 'varchar',
        'len' => 255,
        'fieldType' => 'varchar',
      ),
      'shippingAddressPostalCode' => 
      array (
        'type' => 'varchar',
        'len' => 40,
        'fieldType' => 'varchar',
      ),
      'createdAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'modifiedAt' => 
      array (
        'type' => 'datetime',
        'notNull' => false,
        'fieldType' => 'datetime',
      ),
      'Stream' => 
      array (
        'type' => 'varchar',
        'len' => 2000,
        'fieldType' => 'varchar',
      ),
      'emailAddressIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'emailAddresses.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'emailAddresses.opt_out = true AND emailAddresses.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'emailAddresses.opt_out = false OR emailAddresses.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'emailAddresses',
                1 => 'emailAddresses',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'emailAddresses.opt_out {direction}',
        'default' => false,
      ),
      'phoneNumberIsOptedOut' => 
      array (
        'type' => 'bool',
        'notNull' => true,
        'notStorable' => true,
        'fieldType' => 'bool',
        'select' => 'phoneNumbers.opt_out',
        'where' => 
        array (
          '= TRUE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = true AND phoneNumbers.opt_out IS NOT NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
          '= FALSE' => 
          array (
            'sql' => 'phoneNumbers.opt_out = false OR phoneNumbers.opt_out IS NULL',
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbers',
                2 => 
                array (
                  'primary' => 1,
                ),
              ),
            ),
          ),
        ),
        'orderBy' => 'phoneNumbers.opt_out {direction}',
        'default' => false,
      ),
      'billingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'shippingAddressMap' => 
      array (
        'type' => 'varchar',
        'notExportable' => true,
        'notStorable' => true,
        'fieldType' => 'map',
      ),
      'emailAddressData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberData' => 
      array (
        'type' => 'text',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'phoneNumberNumeric' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
        'where' => 
        array (
          'LIKE' => 'testing_entity.id IN (
                                SELECT entity_id
                                FROM entity_phone_number
                                JOIN phone_number ON phone_number.id = entity_phone_number.phone_number_id
                                WHERE
                                    entity_phone_number.deleted = 0 AND entity_phone_number.entity_type = \'TestingEntity\' AND
                                    phone_number.deleted = 0 AND phone_number.numeric LIKE {value}
                            )',
          '=' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric = {value}',
            'distinct' => true,
          ),
          '<>' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric <> {value}',
            'distinct' => true,
          ),
          'IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IN {value}',
            'distinct' => true,
          ),
          'NOT IN' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric NOT IN {value}',
            'distinct' => true,
          ),
          'IS NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NULL',
            'distinct' => true,
          ),
          'IS NOT NULL' => 
          array (
            'leftJoins' => 
            array (
              0 => 
              array (
                0 => 'phoneNumbers',
                1 => 'phoneNumbersNumericMultiple',
              ),
            ),
            'sql' => 'phoneNumbersNumericMultiple.numeric IS NOT NULL',
            'distinct' => true,
          ),
        ),
      ),
      'createdById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'createdByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'createdBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'modifiedById' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'modifiedByName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'modifiedBy',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'assignedUserId' => 
      array (
        'dbType' => 'varchar',
        'len' => 24,
        'type' => 'foreignId',
        'index' => true,
        'attributeRole' => 'id',
        'fieldType' => 'link',
        'notNull' => false,
      ),
      'assignedUserName' => 
      array (
        'type' => 'foreign',
        'notStorable' => false,
        'attributeRole' => 'name',
        'fieldType' => 'link',
        'relation' => 'assignedUser',
        'foreign' => 
        array (
          0 => 'firstName',
          1 => ' ',
          2 => 'lastName',
        ),
      ),
      'teamsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkMultipleIdList' => true,
        'relation' => 'teams',
        'isUnordered' => true,
        'attributeRole' => 'idList',
        'fieldType' => 'linkMultiple',
      ),
      'teamsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkMultipleNameMap' => true,
        'attributeRole' => 'nameMap',
        'fieldType' => 'linkMultiple',
      ),
      'isFollowed' => 
      array (
        'type' => 'varchar',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'followersNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'notExportable' => true,
      ),
      'tasksIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'tasksNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'callsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsIds' => 
      array (
        'type' => 'jsonArray',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
      'meetingsNames' => 
      array (
        'type' => 'jsonObject',
        'notStorable' => true,
        'isLinkStub' => true,
      ),
    ),
    'relations' => 
    array (
      'emailAddresses' => 
      array (
        'type' => 'manyMany',
        'entity' => 'EmailAddress',
        'relationName' => 'entityEmailAddress',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'emailAddressId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TestingEntity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'phoneNumbers' => 
      array (
        'type' => 'manyMany',
        'entity' => 'PhoneNumber',
        'relationName' => 'entityPhoneNumber',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'phoneNumberId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TestingEntity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
          'primary' => 
          array (
            'type' => 'bool',
            'default' => false,
          ),
        ),
      ),
      'tasks' => 
      array (
        'type' => 'hasChildren',
        'entity' => 'Task',
        'foreignKey' => 'parentId',
        'foreignType' => 'parentType',
        'foreign' => 'parent',
      ),
      'calls' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Call',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'meetings' => 
      array (
        'type' => 'hasMany',
        'entity' => 'Meeting',
        'foreignKey' => 'parentId',
        'foreign' => 'parent',
      ),
      'teams' => 
      array (
        'type' => 'manyMany',
        'entity' => 'Team',
        'relationName' => 'EntityTeam',
        'midKeys' => 
        array (
          0 => 'entityId',
          1 => 'teamId',
        ),
        'conditions' => 
        array (
          'entityType' => 'TestingEntity',
        ),
        'additionalColumns' => 
        array (
          'entityType' => 
          array (
            'type' => 'varchar',
            'len' => 100,
          ),
        ),
      ),
      'assignedUser' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'assignedUserId',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'modifiedBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'modifiedById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
      'createdBy' => 
      array (
        'type' => 'belongsTo',
        'entity' => 'User',
        'key' => 'createdById',
        'foreignKey' => 'id',
        'foreign' => NULL,
      ),
    ),
    'indexes' => 
    array (
      'name' => 
      array (
        'columns' => 
        array (
          0 => 'name',
          1 => 'deleted',
        ),
        'key' => 'IDX_NAME',
      ),
      'assignedUser' => 
      array (
        'columns' => 
        array (
          0 => 'assignedUserId',
          1 => 'deleted',
        ),
        'key' => 'IDX_ASSIGNED_USER',
      ),
    ),
    'collection' => 
    array (
      'orderBy' => 'createdAt',
      'order' => 'DESC',
    ),
  ),
);
?>